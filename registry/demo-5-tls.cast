{"version": 2, "width": 100, "height": 26, "timestamp": 1589147951, "idle_time_limit": 3.0, "env": {"SHELL": "/bin/bash", "TERM": "xterm-256color"}}
[0.003696, "o", "\u001b[?1049h\u001b[22;0;0t\u001b[?1h\u001b=\u001b[H\u001b[2J\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1002l\u001b[?1006l\u001b[?1005l\u001b[c\u001b(B\u001b[m\u001b[?12;25h\u001b[?12l\u001b[?25h\u001b[?1003l\u001b[?1006l\u001b[?2004l\u001b[1;1H\u001b[1;26r\u001b]112\u0007\u001b[6;1H\u001b[?1006h\u001b[?1000h"]
[0.004122, "o", "\u001b[?25l\u001b[H\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m##\u001b[35m 5 - TLS and Pulling Directly from the Cache\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ndocker image pull hub-cache:5000/debian\u001b[K\r\n# that failed, we need to configure TLS\u001b[K\r\nexit\u001b[K\r\n# generate certs\u001b[K\r\n./make-certs.demo5.sh\u001b[K\r\n# stop everything to redeploy with certs\u001b[K\r\ndocker container stop builder hub-cache\u001b[K\r\ndocker container rm builder hub-cache\u001b[K\r\n# redeploy with certs, mounting them in /host\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name hub-cache \\                                       \u001b[K\r\n  -v \"$(pwd):/host:ro\" \\\u001b[K\r\n  -v \"hub-cache:/var/lib/registry\" \\\u001b[K\r\n  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\                                 \u001b[K\r\n  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\                                       \u001b[K\r\n  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\\u001b[K\r\n  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b"]
[0.004199, "o", "[K\r\n  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\                                                 \u001b[K\r\n                                                                                  115,1         54%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                                                  \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[6;1H\u001b[?12l\u001b[?25h\u001b(B\u001b[m\u001b[?12;25h\u001b[?12l\u001b[?25h\u001b[?1003l\u001b[?1006l\u001b[?2004l\u001b[1;1H\u001b[1;26r\u001b[6;1H\u001b[?1006h\u001b[?1000h\u001b[?25l\u001b[H\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m##\u001b[35m 5 - TLS and Pulling Directly from the Cache\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ndocker image pull hub-cache:5000/debian\u001b[K\r\n# that failed, we need to configure TLS\u001b[K\r\nexit\u001b[K\r\n# generate certs\u001b[K\r\n./make-certs.demo5.sh\u001b[K\r\n# stop everything to redeploy with certs\u001b[K\r\ndocker container stop builder hub-cache\u001b[K\r\ndocker container rm builder hub-cache\u001b[K\r\n# redeploy with certs, mounting them in /host\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --nam"]
[0.004302, "o", "e hub-cache \\                                       \u001b[K\r\n  -v \"$(pwd):/host:ro\" \\\u001b[K\r\n  -v \"hub-cache:/var/lib/registry\" \\\u001b[K\r\n  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\                                 \u001b[K\r\n  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\                                       \u001b[K\r\n  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\\u001b[K\r\n  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b[K\r\n  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\                                                 \u001b[K\r\n                                                                                  115,1         54%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                                                  \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[6;1H\u001b[?12l\u001b[?25h"]
[1.702927, "o", "\u001b[?25l\u001b[H\u001b[31m\u001b[1m```\u001b(B\u001b[m                                                                                            \u001b[30m\u001b[43m[0/0]\u001b[39m\u001b[49m\u001b[2;1H\u001b[K\r\n\u001b[31m\u001b[1m##\u001b[35m 5 - TLS and Pulling Directly from the Cache\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ndocker image pull hub-cache:5000/debian\u001b[K\r\n# that failed, we need to configure TLS\u001b[K\r\nexit\u001b[K\r\n# generate certs\u001b[K\r\n./make-certs.demo5.sh\u001b[K\r\n# stop everything to redeploy with certs\u001b[K\r\ndocker container stop builder hub-cache\u001b[K\r\ndocker container rm builder hub-cache\u001b[K\r\n# redeploy with certs, mounting them in /host\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name hub-cache \\                                       \u001b[K\r\n  -v \"$(pwd):/host:ro\" \\\u001b[K\r\n  -v \"hub-cache:/var/lib/registry\" \\\u001b[K\r\n  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\                                 \u001b[K\r\n  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\                       "]
[1.703, "o", "                \u001b[K\r\n  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\\u001b[K\r\n  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b[K\r\n  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\\u001b[K\r\n                                                                                  115,1         54%\u001b[K\u001b[6;1H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[1.703561, "o", "\u001b[?25l\u001b[26d\u001b[30m\u001b[42m[preso] 0:bash- 1:[tmux]*                                              \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[6;1H\u001b[?12l\u001b[?25h"]
[2.177116, "o", "\u001b[30m\u001b[43md\r\u001b(B\u001b[m"]
[2.729267, "o", "\u001b[30m\u001b[43mdocker container exec -it builder sh                                                                \u001b[7;1Hd\r\u001b(B\u001b[m"]
[3.173583, "o", "\u001b[30m\u001b[43mdocker image pull hub-cache:5000/debian                                                             \u001b[8;1H#\r\u001b(B\u001b[m"]
[3.704808, "o", "\u001b[A\u001b[30m\u001b[43md\u001b[39m\u001b[49mocker image pull hub-cache:5000/debian                                                             \u001b[8;1H#\u001b[7;1H\u001b[30m\u001b[43mdocker image pull hub-cache:5000/debian \b\u001b(B\u001b[m"]
[4.352906, "o", "\r\u001b[30m\u001b[43mdocker image pull hub-cache:5000/debian\u001b[39m\u001b[49m \b\b"]
[4.904498, "o", "\u001b]52;;ZG9ja2VyIGNvbnRhaW5lciBleGVjIC1pdCBidWlsZGVyIHNoCmRvY2tlciBpbWFnZSBwdWxsIGh1Yi1jYWNoZTo1MDAwL2RlYmlhbg==\u0007\u001b[6;1H\u001b[?1006h\u001b[?1000h"]
[4.906533, "o", "\u001b[?25l\u001b[H\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m##\u001b[35m 5 - TLS and Pulling Directly from the Cache\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ndocker image pull hub-cache:5000/debian\u001b[K\r\n# that failed, we need to configure TLS\u001b[K\r\nexit\u001b[K\r\n# generate certs\u001b[K\r\n./make-certs.demo5.sh\u001b[K\r\n# stop everything to redeploy with certs\u001b[K\r\ndocker container stop builder hub-cache\u001b[K\r\ndocker container rm builder hub-cache\u001b[K\r\n# redeploy with certs, mounting them in /host\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name hub-cache \\                                       \u001b[K\r\n  -v \"$(pwd):/host:ro\" \\\u001b[K\r\n  -v \"hub-cache:/var/lib/registry\" \\\u001b[K\r\n  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\                                 \u001b[K\r\n  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\                                       \u001b[K\r\n  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\\u001b[K\r\n  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b"]
[4.906915, "o", "[K\r\n  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\                                                 \u001b[K\r\n                                                                                  115,1         54%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                                                  \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[6;1H\u001b[?12l\u001b[?25h"]
[6.954591, "o", "\u001b[?25l\u001b[32m\u001b[17d───────────────────────────────────────────────────\u001b[39m─────────────────────────────────────────────────\u001b[1;1H\u001b(B\u001b[mbuilder\u001b[K\r\n$ docker volume rm dind\u001b[K\r\ndind\u001b[K\r\n$ docker container run --env-file .env   -d --net cache --restart unless-stopped --name builder --privileged   -v dind:/var/lib/docker   docker:dind --registry-mirror http://hub-cache:5000           \u001b[K\r\n7290b3a4b32214e1ed80b6c284f33d8af115bba4e7095cce421265fc6595e47c                                   \u001b[K\r\n$ docker container exec -it builder docker image pull sudobmitch/demo:ubuntu                       \u001b[K\r\nubuntu: Pulling from sudobmitch/demo\u001b[K\r\nd51af753c3d3: Pull complete\u001b[K\r\nfc878cd0a91c: Pull complete\u001b[K\r\n6154df8ff988: Pull complete\u001b[K\r\nfee5db0ff82f: Pull complete\u001b[K\r\nDigest: sha256:5747316366b8cc9e3021cd7286f42b2d6d81e3d743e2ab"]
[6.955054, "o", "571f55bcd5df788cc8                    \u001b[K\r\nStatus: Downloaded newer image for sudobmitch/demo:ubuntu                                          \u001b[K\r\ndocker.io/sudobmitch/demo:ubuntu\u001b[K\r\n$\u001b[K\u001b[18;1H9.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\(linux\\))\" http.response.contenttype=\"application/octet-stream\" http.response.duration=157.076482ms http.response.status=200 http.response.written=28556247                      \u001b[K\r\n192.168.70.3 - - [10/May/2020:21:58:01 +0000] \"GET /v2/sudobmitch/demo/blobs/sha256:d51af753c3d3a984351448ec0f85ddafc580680fd6dfce9f4b09fdb367ee1e3e HTTP/1.1\" 200 28556247 \"\" \"docker/19.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\\\(linux\\\\))\"\u001b[K\r\n\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash* 1:vi-                                                  \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[16;3H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[8.162001, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3Hdocker container exec -it builder sh\u001b[1;26r\u001b[16;1H"]
[8.290542, "o", "/ # "]
[8.290666, "o", "docker image pull hub-cache:5000/debian"]
[8.291689, "o", "\r/ # docker image pull hub-cache:5000/debian\u001b[1;16r\u001b[16;44H\u001b[K\u001b[1;26r\u001b[16;44H"]
[10.148536, "o", "\u001b[?25l\u001b[26;1H\u001b[30m\u001b[42m[preso] 0:docker* 1:vi-                                                \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[16;44H\u001b[?12l\u001b[?25h"]
[11.28946, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[1;26r\u001b[16;1H"]
[11.337976, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[AUsing default tag: latest\u001b[1;26r\u001b[16;1H"]
[11.340576, "o", "\u001b[1;16r\u001b[2S\u001b[14dError response from daemon: Get https://hub-cache:5000/v2/: http: server gave HTTP response to HTTPS client\u001b[1;26r\u001b[16;1H"]
[11.341944, "o", "/ # "]
[16.306205, "o", "\u001b[?25l\u001b[H\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m##\u001b[35m 5 - TLS and Pulling Directly from the Cache\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ndocker image pull hub-cache:5000/debian\u001b[K\r\n# that failed, we need to configure TLS\u001b[K\r\nexit\u001b[K\r\n# generate certs\u001b[K\r\n./make-certs.demo5.sh\u001b[K\r\n# stop everything to redeploy with certs\u001b[K\r\ndocker container stop builder hub-cache\u001b[K\r\ndocker container rm builder hub-cache\u001b[K\r\n# redeploy with certs, mounting them in /host\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name hub-cache \\                                       \u001b[K\r\n  -v \"$(pwd):/host:ro\" \\\u001b[K\r\n  -v \"hub-cache:/var/lib/registry\" \\\u001b[K\r\n  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\                                 \u001b[K\r\n  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\                                       \u001b[K\r\n  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\\u001b[K\r\n  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b"]
[16.306492, "o", "[K\r\n  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\                                                 \u001b[K\r\n                                                                                  115,1         54%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:docker- 1:vi*                                                \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[6;1H\u001b[?12l\u001b[?25h\u001b[?1006h\u001b[?1000h"]
[17.25719, "o", "\u001b[25;85H6\u001b[7;1H"]
[17.465075, "o", "\u001b[25;85H7\u001b[8;1H"]
[17.647578, "o", "\u001b[25;85H8\u001b[9;1H"]
[18.513261, "o", "\u001b[25;85H9\u001b[10;1H"]
[18.713096, "o", "\u001b[25;84H20\u001b[11;1H"]
[21.482435, "o", "\u001b[?25l\u001b[H\u001b[31m\u001b[1m```\u001b(B\u001b[m                                                                                            \u001b[30m\u001b[43m[0/0]\u001b[39m\u001b[49m\u001b[2;1H\u001b[K\r\n\u001b[31m\u001b[1m##\u001b[35m 5 - TLS and Pulling Directly from the Cache\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ndocker image pull hub-cache:5000/debian\u001b[K\r\n# that failed, we need to configure TLS\u001b[K\r\nexit\u001b[K\r\n# generate certs\u001b[K\r\n./make-certs.demo5.sh\u001b[K\r\n# stop everything to redeploy with certs\u001b[K\r\ndocker container stop builder hub-cache\u001b[K\r\ndocker container rm builder hub-cache\u001b[K\r\n# redeploy with certs, mounting them in /host\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name hub-cache \\                                       \u001b[K\r\n  -v \"$(pwd):/host:ro\" \\\u001b[K\r\n  -v \"hub-cache:/var/lib/registry\" \\\u001b[K\r\n  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\                                 \u001b[K\r\n  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\                       "]
[21.482892, "o", "                \u001b[K\r\n  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\\u001b[K\r\n  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b[K\r\n  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\\u001b[K\r\n                                                                                  120,1         54%\u001b[K\u001b[11;1H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[21.484366, "o", "\u001b[?25l\u001b[26d\u001b[30m\u001b[42m[preso] 0:docker- 1:[tmux]*                                            \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[11;1H\u001b[?12l\u001b[?25h"]
[21.753296, "o", "\u001b[30m\u001b[43m.\r\u001b(B\u001b[m"]
[22.136767, "o", "\u001b[30m\u001b[43m./make-certs.demo5.sh                                                                               \u001b[12;1H#\r\u001b(B\u001b[m"]
[22.641078, "o", "\u001b[A\u001b[30m\u001b[43m.\u001b[39m\u001b[49m/make-certs.demo5.sh                                                                               \u001b[12;1H#\u001b[11;1H\u001b[30m\u001b[43m./make-certs.demo5.sh \b\u001b(B\u001b[m"]
[23.120798, "o", "\r\u001b[30m\u001b[43m./make-certs.demo5.sh\u001b[39m\u001b[49m \b\b"]
[24.048361, "o", "\u001b]52;;Li9tYWtlLWNlcnRzLmRlbW81LnNo\u0007\r\u001b[?1006h\u001b[?1000h"]
[24.050426, "o", "\u001b[?25l\u001b[H\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m##\u001b[35m 5 - TLS and Pulling Directly from the Cache\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ndocker image pull hub-cache:5000/debian\u001b[K\r\n# that failed, we need to configure TLS\u001b[K\r\nexit\u001b[K\r\n# generate certs\u001b[K\r\n./make-certs.demo5.sh\u001b[K\r\n# stop everything to redeploy with certs\u001b[K\r\ndocker container stop builder hub-cache\u001b[K\r\ndocker container rm builder hub-cache\u001b[K\r\n# redeploy with certs, mounting them in /host\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name hub-cache \\                                       \u001b[K\r\n  -v \"$(pwd):/host:ro\" \\\u001b[K\r\n  -v \"hub-cache:/var/lib/registry\" \\\u001b[K\r\n  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\                                 \u001b[K\r\n  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\                                       \u001b[K\r\n  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\\u001b[K\r\n  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b"]
[24.050723, "o", "[K\r\n  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\                                                 \u001b[K\r\n                                                                                  120,1         54%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:docker- 1:vi*                                                \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[11;1H\u001b[?12l\u001b[?25h"]
[25.146303, "o", "\u001b[?25l\u001b[32m\u001b[6B───────────────────────────────────────────────────\u001b[39m─────────────────────────────────────────────────\u001b[1;1H\u001b(B\u001b[m7290b3a4b32214e1ed80b6c284f33d8af115bba4e7095cce421265fc6595e47c                                   \u001b[K\r\n$ docker container exec -it builder docker image pull sudobmitch/demo:ubuntu                       \u001b[K\r\nubuntu: Pulling from sudobmitch/demo\u001b[K\r\nd51af753c3d3: Pull complete\u001b[K\r\nfc878cd0a91c: Pull complete\u001b[K\r\n6154df8ff988: Pull complete\u001b[K\r\nfee5db0ff82f: Pull complete\u001b[K\r\nDigest: sha256:5747316366b8cc9e3021cd7286f42b2d6d81e3d743e2ab571f55bcd5df788cc8                    \u001b[K\r\nStatus: Downloaded newer image for sudobmitch/demo:ubuntu                                          \u001b[K\r\ndocker.io/sudobmitch/demo:ubuntu\u001b[K\r\n$ docker container exec -it builder sh\u001b[K\r\n/ # docker image pull hub-c"]
[25.146428, "o", "ache:5000/debian\u001b[K\r\nUsing default tag: latest\u001b[K\r\nError response from daemon: Get https://hub-cache:5000/v2/: http: server gave HTTP response to HTTPS client\u001b[K\r\n/ #\u001b[K\u001b[18;1H9.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\(linux\\))\" http.response.contenttype=\"application/octet-stream\" http.response.duration=157.076482ms http.response.status=200 http.response.written=28556247                      \u001b[K\r\n192.168.70.3 - - [10/May/2020:21:58:01 +0000] \"GET /v2/sudobmitch/demo/blobs/sha256:d51af753c3d3a984351448ec0f85ddafc580680fd6dfce9f4b09fdb367ee1e3e HTTP/1.1\" 200 28556247 \"\" \"docker/19.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\\\(linux\\\\))\"\u001b[K\r\n\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:docker* 1:vi-                                                \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[16;5H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[26.345467, "o", "e"]
[26.526452, "o", "x"]
[26.617326, "o", "i"]
[26.721403, "o", "t"]
[26.872894, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[1;26r\u001b[16;1H"]
[26.92412, "o", "$ "]
[28.289543, "o", "\u001b[?25l\u001b[26;1H\u001b[30m\u001b[42m[preso] 0:bash* 1:vi-                                                  \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[16;3H\u001b[?12l\u001b[?25h"]
[28.290132, "o", "c"]
[28.928719, "o", "a"]
[29.072495, "o", "t"]
[29.192426, "o", " "]
[30.029188, "o", "./make-certs.demo5.sh"]
[30.535082, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[1;26r\u001b[16;1H"]
[30.536522, "o", "\u001b[1;16r\u001b[12S\u001b[4d#!/bin/sh\u001b[6;1H[ -f ca-key.pem ] || openssl genrsa -out ca-key.pem 4096\r\nopenssl req -new -x509 -days 365 -subj \"/CN=Local CA\" -key ca-key.pem -sha256 -out ca.pem\r\n[ -f reg-key.pem ] || openssl genrsa -out reg-key.pem 4096\r\n[ -f reg.csr ] || openssl req -new -subj \"/CN=Registry\" -key reg-key.pem -out reg.csr\r\necho \"subjectAltName = DNS:hub-cache\" >reg.ext\r\nopenssl x509 -req -days 365 -in reg.csr -extfile reg.ext -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out reg.pem\u001b[1;26r\u001b[16;1H"]
[30.53671, "o", "$ "]
[34.405759, "o", "./make-certs.demo5.sh"]
[35.488925, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[1;26r\u001b[16;1H"]
[35.504724, "o", "\u001b[1;16r\u001b[2S\u001b[14dSignature ok\r\nsubject=CN = Registry\u001b[1;26r\u001b[16;1H\u001b[1;16r\u001b[16;1H\n\u001b[AGetting CA Private Key\u001b[1;26r\u001b[16;1H"]
[35.509519, "o", "$ "]
[37.466398, "o", "\u001b[?25l\u001b[H\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m##\u001b[35m 5 - TLS and Pulling Directly from the Cache\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ndocker image pull hub-cache:5000/debian\u001b[K\r\n# that failed, we need to configure TLS\u001b[K\r\nexit\u001b[K\r\n# generate certs\u001b[K\r\n./make-certs.demo5.sh\u001b[K\r\n# stop everything to redeploy with certs\u001b[K\r\ndocker container stop builder hub-cache\u001b[K\r\ndocker container rm builder hub-cache\u001b[K\r\n# redeploy with certs, mounting them in /host\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name hub-cache \\                                       \u001b[K\r\n  -v \"$(pwd):/host:ro\" \\\u001b[K\r\n  -v \"hub-cache:/var/lib/registry\" \\\u001b[K\r\n  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\                                 \u001b[K\r\n  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\                                       \u001b[K\r\n  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\\u001b[K\r\n  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b"]
[37.4665, "o", "[K\r\n  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\                                                 \u001b[K\r\n                                                                                  120,1         54%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                                                  \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[11;1H\u001b[?12l\u001b[?25h\u001b[?1006h\u001b[?1000h"]
[38.377352, "o", "\u001b[25;85H1\u001b[12;1H"]
[38.577348, "o", "\u001b[25;85H2\u001b[13;1H"]
[39.954387, "o", "\u001b[?25l\u001b[H\u001b[31m\u001b[1m```\u001b(B\u001b[m                                                                                            \u001b[30m\u001b[43m[0/0]\u001b[39m\u001b[49m\u001b[2;1H\u001b[K\r\n\u001b[31m\u001b[1m##\u001b[35m 5 - TLS and Pulling Directly from the Cache\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ndocker image pull hub-cache:5000/debian\u001b[K\r\n# that failed, we need to configure TLS\u001b[K\r\nexit\u001b[K\r\n# generate certs\u001b[K\r\n./make-certs.demo5.sh\u001b[K\r\n# stop everything to redeploy with certs\u001b[K\r\ndocker container stop builder hub-cache\u001b[K\r\ndocker container rm builder hub-cache\u001b[K\r\n# redeploy with certs, mounting them in /host\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name hub-cache \\                                       \u001b[K\r\n  -v \"$(pwd):/host:ro\" \\\u001b[K\r\n  -v \"hub-cache:/var/lib/registry\" \\\u001b[K\r\n  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\                                 \u001b[K\r\n  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\                       "]
[39.954948, "o", "                \u001b[K\r\n  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\\u001b[K\r\n  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b[K\r\n  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\\u001b[K\r\n                                                                                  122,1         54%\u001b[K\u001b[13;1H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[39.956295, "o", "\u001b[?25l\u001b[26d\u001b[30m\u001b[42m[preso] 0:bash- 1:[tmux]*                                              \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[13;1H\u001b[?12l\u001b[?25h"]
[40.185142, "o", "\u001b[30m\u001b[43md\r\u001b(B\u001b[m"]
[40.561435, "o", "\u001b[30m\u001b[43mdocker container stop builder hub-cache                                                             \u001b[14;1Hd\r\u001b(B\u001b[m"]
[41.121047, "o", "\u001b[30m\u001b[43mdocker container rm builder hub-cache                                                               \u001b[15;1H#\r\u001b(B\u001b[m"]
[42.017074, "o", "\u001b[A\u001b[30m\u001b[43md\u001b[39m\u001b[49mocker container rm builder hub-cache                                                               \u001b[15;1H#\u001b[14;1H\u001b[30m\u001b[43mdocker container rm builder hub-cache \b\u001b(B\u001b[m"]
[42.296953, "o", "\r\u001b[30m\u001b[43mdocker container rm builder hub-cache\u001b[39m\u001b[49m \b\b"]
[42.846516, "o", "\u001b]52;;ZG9ja2VyIGNvbnRhaW5lciBzdG9wIGJ1aWxkZXIgaHViLWNhY2hlCmRvY2tlciBjb250YWluZXIgcm0gYnVpbGRlciBodWItY2FjaGU=\u0007\u001b[13;1H\u001b[?1006h\u001b[?1000h"]
[42.847782, "o", "\u001b[?25l\u001b[H\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m##\u001b[35m 5 - TLS and Pulling Directly from the Cache\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ndocker image pull hub-cache:5000/debian\u001b[K\r\n# that failed, we need to configure TLS\u001b[K\r\nexit\u001b[K\r\n# generate certs\u001b[K\r\n./make-certs.demo5.sh\u001b[K\r\n# stop everything to redeploy with certs\u001b[K\r\ndocker container stop builder hub-cache\u001b[K\r\ndocker container rm builder hub-cache\u001b[K\r\n# redeploy with certs, mounting them in /host\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name hub-cache \\                                       \u001b[K\r\n  -v \"$(pwd):/host:ro\" \\\u001b[K\r\n  -v \"hub-cache:/var/lib/registry\" \\\u001b[K\r\n  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\                                 \u001b[K\r\n  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\                                       \u001b[K\r\n  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\\u001b[K\r\n  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b"]
[42.847841, "o", "[K\r\n  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\                                                 \u001b[K\r\n                                                                                  122,1         54%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                                                  \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[13;1H\u001b[?12l\u001b[?25h"]
[43.426636, "o", "\u001b[?25l\u001b[32m\u001b[4B───────────────────────────────────────────────────\u001b[39m─────────────────────────────────────────────────\u001b(B\u001b[m\u001b[1;1H\u001b[K\r\n[ -f ca-key.pem ] || openssl genrsa -out ca-key.pem 4096                                           \u001b[K\r\nopenssl req -new -x509 -days 365 -subj \"/CN=Local CA\" -key ca-key.pem -sha256 -out ca.pem          \u001b[K\r\n[ -f reg-key.pem ] || openssl genrsa -out reg-key.pem 4096                                         \u001b[K\r\n[ -f reg.csr ] || openssl req -new -subj \"/CN=Registry\" -key reg-key.pem -out reg.csr              \u001b[K\r\necho \"subjectAltName = DNS:hub-cache\" >reg.ext\u001b[K\r\nopenssl x509 -req -days 365 -in reg.csr -extfile reg.ext -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out reg.pem\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n$ ./make-certs.demo5.sh\u001b[K\r\nSignature ok\u001b[K\r\nsubject=CN = Registry\u001b[K\r\nGetting CA Priv"]
[43.426808, "o", "ate Key\u001b[K\r\n$\u001b[K\u001b[18;1H9.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\(linux\\))\" http.response.contenttype=\"application/octet-stream\" http.response.duration=157.076482ms http.response.status=200 http.response.written=28556247                      \u001b[K\r\n192.168.70.3 - - [10/May/2020:21:58:01 +0000] \"GET /v2/sudobmitch/demo/blobs/sha256:d51af753c3d3a984351448ec0f85ddafc580680fd6dfce9f4b09fdb367ee1e3e HTTP/1.1\" 200 28556247 \"\" \"docker/19.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\\\(linux\\\\))\"\u001b[K\r\n\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash* 1:vi-                                                  \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[16;3H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[44.698092, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3Hdocker container stop builder hub-cache\u001b[1;26r\u001b[16;1H"]
[44.903085, "o", "\u001b[25d$ \u001b[16;1H"]
[46.157769, "o", "\u001b[1;16r\u001b[2S\u001b[14dbuilder\r\nhub-cache\u001b[1;26r\u001b[16;1H"]
[46.160209, "o", "$ docker container rm builder hub-cache"]
[46.2262, "o", "\u001b[?25l\u001b[H\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m##\u001b[35m 5 - TLS and Pulling Directly from the Cache\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ndocker image pull hub-cache:5000/debian\u001b[K\r\n# that failed, we need to configure TLS\u001b[K\r\nexit\u001b[K\r\n# generate certs\u001b[K\r\n./make-certs.demo5.sh\u001b[K\r\n# stop everything to redeploy with certs\u001b[K\r\ndocker container stop builder hub-cache\u001b[K\r\ndocker container rm builder hub-cache\u001b[K\r\n# redeploy with certs, mounting them in /host\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name hub-cache \\                                       \u001b[K\r\n  -v \"$(pwd):/host:ro\" \\\u001b[K\r\n  -v \"hub-cache:/var/lib/registry\" \\\u001b[K\r\n  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\                                 \u001b[K\r\n  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\                                       \u001b[K\r\n  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\\u001b[K\r\n  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b"]
[46.226521, "o", "[K\r\n  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\                                                 \u001b[K\r\n                                                                                  122,1         54%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                                                  \"bmitch-t490\" 17:59 10-May-20\u001b(B\u001b[m\u001b[13;1H\u001b[?12l\u001b[?25h\u001b[?1006h\u001b[?1000h"]
[47.193384, "o", "\u001b[25;85H3\u001b[14;1H"]
[47.692619, "o", "\u001b[25;85H4\u001b[15;1H"]
[47.722567, "o", "\u001b[25;85H5\u001b[16;1H"]
[47.754127, "o", "\u001b[25;85H6\u001b[17;1H"]
[47.783563, "o", "\u001b[25;85H7\u001b[18;1H"]
[47.811445, "o", "\u001b[25;85H8\u001b[19;1H"]
[47.841675, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[2C-e REGISTRY_HTTP_TLS_KEY=/host/reg-key.pem \\\u001b[25;83H\u001b[K129,1\u001b[9C54%\u001b[1;26r\u001b[19;1H"]
[47.873813, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[2Cregistry:2\u001b[25;83H\u001b[K130,1\u001b[9C55%\u001b[1;26r\u001b[19;1H"]
[47.904422, "o", "\u001b[1;24r\u001b[24;1H\n# add the ca cert to /etc/docker/certs.d/hub-cache:5000 in builder\u001b[25;83H\u001b[K131,1\u001b[9C55%\u001b[1;26r\u001b[19;1H"]
[47.935374, "o", "\u001b[1;24r\u001b[24;1H\n# also note the https on the --registry-mirror arg\u001b[25;83H\u001b[K132,1\u001b[9C56%\u001b[1;26r\u001b[19;1H"]
[47.965808, "o", "\u001b[1;24r\u001b[24;1H\ndocker container run --env-file .env \\\u001b[25;83H\u001b[K133,1\u001b[9C56%\u001b[1;26r\u001b[19;1H"]
[47.995995, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[2C-d --net cache --restart unless-stopped --name builder --privileged \\\u001b[25;83H\u001b[K134,1\u001b[9C57%\u001b[1;26r\u001b[19;1H"]
[48.026139, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[2C-v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\\u001b[25;83H\u001b[K135,1\u001b[9C57%\u001b[1;26r\u001b[19;1H"]
[48.056765, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[2C-v dind:/var/lib/docker \\\u001b[25;83H\u001b[K136,1\u001b[9C58%\u001b[1;26r\u001b[19;1H"]
[48.086561, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[2Cdocker:dind --registry-mirror https://hub-cache:5000\u001b[25;83H\u001b[K137,1\u001b[9C58%\u001b[1;26r\u001b[19;1H"]
[48.117039, "o", "\u001b[1;24r\u001b[24;1H\n# that didn't work, we can't use a colon in the volume mount short syntax\u001b[25;83H\u001b[K138,1\u001b[9C59%\u001b[1;26r\u001b[19;1H"]
[48.146983, "o", "\u001b[1;24r\u001b[24;1H\ndocker container run --env-file .env \\\u001b[25;83H\u001b[K139,1\u001b[9C59%\u001b[1;26r\u001b[19;1H"]
[48.179444, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[2C-d --net cache --restart unless-stopped --name builder --privileged \\\u001b[25;83H\u001b[K140,1\u001b[9C60%\u001b[1;26r\u001b[19;1H"]
[48.753505, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[2C--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\\u001b[25;83H\u001b[K141,1\u001b[9C60%\u001b[1;26r\u001b[19;1H"]
[49.081047, "o", "\u001b[25;85H0\u001b[18;1H"]
[49.581299, "o", "\u001b[25;84H39\u001b[17;1H"]
[49.612396, "o", "\u001b[25;85H8\u001b[16;1H"]
[49.6437, "o", "\u001b[25;85H7\u001b[15;1H"]
[49.674963, "o", "\u001b[25;85H6\u001b[14;1H"]
[49.701471, "o", "\u001b[25;85H5\u001b[13;1H"]
[49.731678, "o", "\u001b[25;85H4\u001b[12;1H"]
[49.762913, "o", "\u001b[25;85H3\u001b[11;1H"]
[49.793, "o", "\u001b[25;85H2\u001b[10;1H"]
[49.822412, "o", "\u001b[25;85H1\u001b[9;1H"]
[49.856495, "o", "\u001b[25;85H0\u001b[8;1H"]
[49.884259, "o", "\u001b[25;84H29\u001b[7;1H"]
[49.914257, "o", "\u001b[25;85H8\u001b[6;1H"]
[49.943757, "o", "\u001b[1;24r\u001b[1;1H\u001b[1L\u001b[1;1Hdocker container stop builder hub-cache\u001b[25;83H\u001b[K127,1\u001b[9C60%\u001b[1;26r\u001b[6;1H"]
[49.976909, "o", "\u001b[1;24r\u001b[1;1H\u001b[1L\u001b[1;1H# stop everything to redeploy with certs\u001b[25;83H\u001b[K126,1\u001b[9C59%\u001b[1;26r\u001b[6;1H"]
[50.004058, "o", "\u001b[1;24r\u001b[1;1H\u001b[1L\u001b[1;1H./make-certs.demo5.sh\u001b[25;83H\u001b[K125,1\u001b[9C59%\u001b[1;26r\u001b[6;1H"]
[50.806189, "o", "\u001b[?25l\u001b[26d\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                                                  \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[6;1H\u001b[?12l\u001b[?25h"]
[51.353597, "o", "\u001b[?25l\u001b[H./make-certs.demo5.sh                                                                          \u001b[30m\u001b[43m[0/0]\u001b[2;1H\u001b[39m\u001b[49m# stop everything to redeploy with certs\u001b[K\r\ndocker container stop builder hub-cache\u001b[K\r\ndocker container rm builder hub-cache\u001b[K\r\n# redeploy with certs, mounting them in /host\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name hub-cache \\                                       \u001b[K\r\n  -v \"$(pwd):/host:ro\" \\\u001b[K\r\n  -v \"hub-cache:/var/lib/registry\" \\\u001b[K\r\n  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\                                 \u001b[K\r\n  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\                                       \u001b[K\r\n  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\\u001b[K\r\n  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b[K\r\n  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\\u001b[K\r\n  -e REGISTRY_HTTP_TLS_KEY=/host/reg-key.pem \\\u001b[K\r\n  registry:2\u001b[K\r\n# add the ca cert to /etc/docker/certs.d/hub-cache:5000 in "]
[51.353682, "o", "builder                                 \u001b[K\r\n# also note the https on the --registry-mirror arg\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\                                \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\n                                                                                  125,1         59%\u001b[K\u001b[6;1H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[51.354729, "o", "\u001b[?25l\u001b[26d\u001b[30m\u001b[42m[preso] 0:bash- 1:[tmux]*                                              \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[6;1H\u001b[?12l\u001b[?25h"]
[51.729294, "o", "\u001b[30m\u001b[43md\r\u001b(B\u001b[m"]
[52.017884, "o", "\u001b[30m\u001b[43mdocker container run --env-file .env \\                                                              \u001b[7;1H \r\u001b(B\u001b[m"]
[52.681089, "o", "\u001b[30m\u001b[43m  -d --net cache --restart unless-stopped --name hub-cache \\                                        \u001b[8;1H \r\u001b(B\u001b[m"]
[53.181348, "o", "\u001b[30m\u001b[43m  -v \"$(pwd):/host:ro\" \\                                                                            \u001b[9;1H \r\u001b(B\u001b[m"]
[53.208869, "o", "\u001b[30m\u001b[43m  -v \"hub-cache:/var/lib/registry\" \\                                                                \u001b[10;1H \r\u001b(B\u001b[m"]
[53.24164, "o", "\u001b[30m\u001b[43m  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\                                  \u001b[11;1H \r\u001b(B\u001b[m"]
[53.274832, "o", "\u001b[30m\u001b[43m  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\                                        \u001b[12;1H \r\u001b(B\u001b[m"]
[53.303876, "o", "\u001b[30m\u001b[43m  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\                                                       \u001b[13;1H \r\u001b(B\u001b[m"]
[53.334258, "o", "\u001b[30m\u001b[43m  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\                                                      \u001b[14;1H \r\u001b(B\u001b[m"]
[53.361365, "o", "\u001b[30m\u001b[43m  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\                                                  \u001b[15;1H \r\u001b(B\u001b[m"]
[53.391254, "o", "\u001b[30m\u001b[43m  -e REGISTRY_HTTP_TLS_KEY=/host/reg-key.pem \\                                                      \u001b[16;1H \r\u001b(B\u001b[m"]
[53.425005, "o", "\u001b[30m\u001b[43m  registry:2                                                                                        \u001b[17;1H#\r\u001b(B\u001b[m"]
[53.4549, "o", "\u001b[30m\u001b[43m# add the ca cert to /etc/docker/certs.d/hub-cache:5000 in builder                                  \u001b[18;1H#\r\u001b(B\u001b[m"]
[53.482493, "o", "\u001b[30m\u001b[43m# also note the https on the --registry-mirror arg                                                  \u001b[19;1Hd\r\u001b(B\u001b[m"]
[53.514504, "o", "\u001b[30m\u001b[43mdocker container run --env-file .env \\                                                              \u001b[20;1H \r\u001b(B\u001b[m"]
[53.54186, "o", "\u001b[30m\u001b[43m  -d --net cache --restart unless-stopped --name builder --privileged \\                             \u001b[21;1H \r\u001b(B\u001b[m"]
[53.832973, "o", "\u001b[30m\u001b[43m  -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\                                 \u001b[22;1H \r\u001b(B\u001b[m"]
[54.25708, "o", "\u001b[30m\u001b[43m  -v dind:/var/lib/docker \\                                                                         \u001b[23;1H \r\u001b(B\u001b[m"]
[54.601067, "o", "\u001b[30m\u001b[43m  \b\u001b(B\u001b[m"]
[55.101562, "o", "\r\u001b[30m\u001b[43m  d\b\u001b(B\u001b[m"]
[55.131763, "o", "\r\u001b[30m\u001b[43m  do\b\u001b(B\u001b[m"]
[55.161233, "o", "\r\u001b[30m\u001b[43m  doc\b\u001b(B\u001b[m"]
[55.193656, "o", "\r\u001b[30m\u001b[43m  dock\b\u001b(B\u001b[m"]
[55.221457, "o", "\r\u001b[30m\u001b[43m  docke\b\u001b(B\u001b[m"]
[55.25118, "o", "\r\u001b[30m\u001b[43m  docker\b\u001b(B\u001b[m"]
[55.281493, "o", "\r\u001b[30m\u001b[43m  docker:\b\u001b(B\u001b[m"]
[55.314041, "o", "\r\u001b[30m\u001b[43m  docker:d\b\u001b(B\u001b[m"]
[55.342127, "o", "\r\u001b[30m\u001b[43m  docker:di\b\u001b(B\u001b[m"]
[55.372284, "o", "\r\u001b[30m\u001b[43m  docker:din\b\u001b(B\u001b[m"]
[55.40201, "o", "\r\u001b[30m\u001b[43m  docker:dind\b\u001b(B\u001b[m"]
[55.431867, "o", "\r\u001b[30m\u001b[43m  docker:dind \b\u001b(B\u001b[m"]
[55.465412, "o", "\r\u001b[30m\u001b[43m  docker:dind -\b\u001b(B\u001b[m"]
[55.492624, "o", "\r\u001b[30m\u001b[43m  docker:dind --\b\u001b(B\u001b[m"]
[55.525537, "o", "\r\u001b[30m\u001b[43m  docker:dind --r\b\u001b(B\u001b[m"]
[55.55275, "o", "\r\u001b[30m\u001b[43m  docker:dind --re\b\u001b(B\u001b[m"]
[55.582622, "o", "\r\u001b[30m\u001b[43m  docker:dind --reg\b\u001b(B\u001b[m"]
[55.616222, "o", "\r\u001b[30m\u001b[43m  docker:dind --regi\b\u001b(B\u001b[m"]
[55.644245, "o", "\r\u001b[30m\u001b[43m  docker:dind --regis\b\u001b(B\u001b[m"]
[55.674388, "o", "\r\u001b[30m\u001b[43m  docker:dind --regist\b\u001b(B\u001b[m"]
[55.704005, "o", "\r\u001b[30m\u001b[43m  docker:dind --registr\b\u001b(B\u001b[m"]
[55.734137, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry\b\u001b(B\u001b[m"]
[55.766171, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-\b\u001b(B\u001b[m"]
[55.798234, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-m\b\u001b(B\u001b[m"]
[55.825327, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mi\b\u001b(B\u001b[m"]
[55.859352, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mir\b\u001b(B\u001b[m"]
[55.888381, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirr\b\u001b(B\u001b[m"]
[55.919885, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirro\b\u001b(B\u001b[m"]
[55.952473, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror\b\u001b(B\u001b[m"]
[55.982594, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror \b\u001b(B\u001b[m"]
[56.012259, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror h\b\u001b(B\u001b[m"]
[56.039906, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror ht\b\u001b(B\u001b[m"]
[56.069317, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror htt\b\u001b(B\u001b[m"]
[56.10289, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror http\b\u001b(B\u001b[m"]
[56.133282, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https\b\u001b(B\u001b[m"]
[56.162338, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https:\b\u001b(B\u001b[m"]
[56.192506, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https:/\b\u001b(B\u001b[m"]
[56.22262, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://\b\u001b(B\u001b[m"]
[56.252131, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://h\b\u001b(B\u001b[m"]
[56.285351, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hu\b\u001b(B\u001b[m"]
[56.313454, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hub\b\u001b(B\u001b[m"]
[56.346206, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hub-\b\u001b(B\u001b[m"]
[56.374262, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hub-c\b\u001b(B\u001b[m"]
[56.404216, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hub-ca\b\u001b(B\u001b[m"]
[56.437274, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hub-cac\b\u001b(B\u001b[m"]
[56.467183, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hub-cach\b\u001b(B\u001b[m"]
[56.496834, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hub-cache\b\u001b(B\u001b[m"]
[56.524846, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hub-cache:\b\u001b(B\u001b[m"]
[56.558657, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hub-cache:5\b\u001b(B\u001b[m"]
[56.587283, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hub-cache:50\b\u001b(B\u001b[m"]
[56.617001, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hub-cache:500\b\u001b(B\u001b[m"]
[56.84897, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hub-cache:5000\b\u001b(B\u001b[m"]
[57.64115, "o", "\u001b]52;;ZG9ja2VyIGNvbnRhaW5lciBydW4gLS1lbnYtZmlsZSAuZW52IFwKICAtZCAtLW5ldCBjYWNoZSAtLXJlc3RhcnQgdW5sZXNzLXN0b3BwZWQgLS1uYW1lIGh1Yi1jYWNoZSBcCiAgLXYgIiQocHdkKTovaG9zdDpybyIgXAogIC12ICJodWItY2FjaGU6L3Zhci9saWIvcmVnaXN0cnkiIFwKICAtZSBSRUdJU1RSWV9TVE9SQUdFX0ZJTEVTWVNURU1fUk9PVERJUkVDVE9SWT0vdmFyL2xpYi9yZWdpc3RyeSBcCiAgLWUgUkVHSVNUUllfUFJPWFlfUkVNT1RFVVJMPWh0dHBzOi8vcmVnaXN0cnktMS5kb2NrZXIuaW8gXAogIC1lIFJFR0lTVFJZX1BST1hZX1VTRVJOQU1FPSIkRE9DS0VSX1VTRVIiIFwKICAtZSBSRUdJU1RSWV9QUk9YWV9QQVNTV09SRD0iJERPQ0tFUl9UT0tFTiIgXAogIC1lIFJFR0lTVFJZX0hUVFBfVExTX0NFUlRJRklDQVRFPS9ob3N0L3JlZy5wZW0gXAogIC1lIFJFR0lTVFJZX0hUVFBfVExTX0tFWT0vaG9zdC9yZWcta2V5LnBlbSBcCiAgcmVnaXN0cnk6MgojIGFkZCB0aGUgY2EgY2VydCB0byAvZXRjL2RvY2tlci9jZXJ0cy5kL2h1Yi1jYWNoZTo1MDAwIGluIGJ1aWxkZXIKIyBhbHNvIG5vdGUgdGhlIGh0dHBzIG9uIHRoZSAtLXJlZ2lzdHJ5LW1pcnJvciBhcmcKZG9ja2VyIGNvbnRhaW5lciBydW4gLS1lbnYtZmlsZSAuZW52IFwKICAtZCAtLW5ldCBjYWNoZSAtLXJlc3RhcnQgdW5sZXNzLXN0b3BwZWQgLS1uYW1lIGJ1aWxkZXIgLS1wcml2aWxlZ2VkIFwKICAtdiAiJChwd2QpL2NhLnBlbTovZXRjL2RvY2tlci9jZXJ0cy5kL2"]
[57.641307, "o", "h1Yi1jYWNoZTo1MDAwL2NhLmNydDpybyIgXAogIC12IGRpbmQ6L3Zhci9saWIvZG9ja2VyIFwKICBkb2NrZXI6ZGluZCAtLXJlZ2lzdHJ5LW1pcnJvciBodHRwczovL2h1Yi1jYWNoZTo1MDAw\u0007\u001b[6;1H\u001b[?1006h\u001b[?1000h"]
[57.643961, "o", "\u001b[?25l\u001b[H./make-certs.demo5.sh\u001b[K\r\n# stop everything to redeploy with certs\u001b[K\r\ndocker container stop builder hub-cache\u001b[K\r\ndocker container rm builder hub-cache\u001b[K\r\n# redeploy with certs, mounting them in /host\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name hub-cache \\                                       \u001b[K\r\n  -v \"$(pwd):/host:ro\" \\\u001b[K\r\n  -v \"hub-cache:/var/lib/registry\" \\\u001b[K\r\n  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\                                 \u001b[K\r\n  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\                                       \u001b[K\r\n  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\\u001b[K\r\n  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b[K\r\n  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\                                                 \u001b[K\r\n  -e REGISTRY_HTTP_TLS_KEY=/host/reg-key.pem \\\u001b[K\r\n  registry:2\u001b[K\r\n# add the ca cert to /etc/docker/certs.d/hub-cache:5000 in builder                                 \u001b[K\r\n# also"]
[57.644238, "o", " note the https on the --registry-mirror arg                                                 \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\                                \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\n                                                                                  125,1         59%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                                                  \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[6;1H\u001b[?12l\u001b[?25h"]
[61.362597, "o", "\u001b[?25l\u001b[32m\u001b[17d───────────────────────────────────────────────────\u001b[39m─────────────────────────────────────────────────\u001b[1;1H\u001b(B\u001b[m[ -f reg-key.pem ] || openssl genrsa -out reg-key.pem 4096                                         \u001b[K\r\n[ -f reg.csr ] || openssl req -new -subj \"/CN=Registry\" -key reg-key.pem -out reg.csr              \u001b[K\r\necho \"subjectAltName = DNS:hub-cache\" >reg.ext\u001b[K\r\nopenssl x509 -req -days 365 -in reg.csr -extfile reg.ext -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out reg.pem\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n$ ./make-certs.demo5.sh\u001b[K\r\nSignature ok\u001b[K\r\nsubject=CN = Registry\u001b[K\r\nGetting CA Private Key\u001b[K\r\n$ docker container stop builder hub-cache\u001b[K\r\nbuilder\u001b[K\r\nhub-cache\u001b[K\r\n$ docker container rm builder hub-cache\u001b[K\u001b[18;1H9.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/a"]
[61.363004, "o", "md64 UpstreamClient(Docker-Client/19.03.8 \\(linux\\))\" http.response.contenttype=\"application/octet-stream\" http.response.duration=157.076482ms http.response.status=200 http.response.written=28556247                      \u001b[K\r\n192.168.70.3 - - [10/May/2020:21:58:01 +0000] \"GET /v2/sudobmitch/demo/blobs/sha256:d51af753c3d3a984351448ec0f85ddafc580680fd6dfce9f4b09fdb367ee1e3e HTTP/1.1\" 200 28556247 \"\" \"docker/19.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\\\(linux\\\\))\"\u001b[K\r\n$\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash* 1:vi-                                                  \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[16;40H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[64.257264, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[1;26r\u001b[16;1H"]
[64.325165, "o", "\u001b[1;16r\u001b[2S\u001b[14dbuilder\r\nhub-cache\u001b[1;26r\u001b[16;1H"]
[64.327807, "o", "$ "]
[65.823468, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3Hdocker container run --env-file .env \\\u001b[1;26r\u001b[16;1H\u001b[1;16r\u001b[16;1H\n\u001b[A>   -d --net cache --restart unless-stopped --name hub-cache \\\r\n> \u001b[1;26r\u001b[16;3H"]
[65.823683, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3H  -v \"$(pwd):/host:ro\" \\\u001b[1;26r\u001b[16;1H> "]
[65.823791, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3H  -v \"hub-cache:/var/lib/registry\" \\\u001b[1;26r\u001b[16;1H> "]
[65.823997, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3H  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\\u001b[1;26r\u001b[16;1H> "]
[65.824228, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3H  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\\u001b[1;26r\u001b[16;1H> "]
[65.824414, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3H  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\\u001b[1;26r\u001b[16;1H> "]
[65.824612, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3H  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b[1;26r\u001b[16;1H> "]
[65.824813, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3H  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\\u001b[1;26r\u001b[16;1H> "]
[65.825003, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3H  -e REGISTRY_HTTP_TLS_KEY=/host/reg-key.pem \\\u001b[1;26r\u001b[16;1H"]
[65.825084, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[A>   registry:2\u001b[1;26r\u001b[16;1H"]
[65.940659, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[A6fc054d09bcf133dba60f8cdc98fdc5522077c3b7c2e4ae2c3c99e25302e249d\u001b[1;26r\u001b[16;1H"]
[66.421093, "o", "$ \u001b[?25l\u001b[26;1H\u001b[30m\u001b[42m[preso] 0:docker* 1:vi-                                                \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[16;3H\u001b[?12l\u001b[?25h\u001b[1;16r\u001b[4S\u001b[12;3H# add the ca cert to /etc/docker/certs.d/hub-cache:5000 in builder\r\n$ # also note the https on the --registry-mirror arg\r\n$ docker container run --env-file .env \\\r\n>   -d --net cache --restart unless-stopped --name builder --privileged \\\r\n> "]
[66.42123, "o", "\u001b[1;26r\u001b[16;3H\u001b[1;16r\u001b[16;1H\n\u001b[15;3H  -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\\u001b[1;26r\u001b[16;1H> "]
[66.421313, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3H  -v dind:/var/lib/docker \\\u001b[1;26r\u001b[16;1H> "]
[66.42141, "o", "  docker:dind --registry-mirror https://hub-cache:5000"]
[69.169947, "o", "\u001b[?25l\u001b[26;1H\u001b[30m\u001b[42m[preso] 0:bash* 1:vi-                                                  \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[16;57H\u001b[?12l\u001b[?25h"]
[69.171134, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[1;26r\u001b[16;1H"]
[69.262517, "o", "\u001b[1;16r\u001b[3S\u001b[13ddocker: Error response from daemon: invalid volume specification: '/home/bmitch/data/git/presentations/registry/example/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro'.\r\nSee 'docker run --help'.\u001b[1;26r\u001b[16;1H"]
[69.264958, "o", "$ "]
[74.058304, "o", "\u001b[?25l\u001b[H./make-certs.demo5.sh\u001b[K\r\n# stop everything to redeploy with certs\u001b[K\r\ndocker container stop builder hub-cache\u001b[K\r\ndocker container rm builder hub-cache\u001b[K\r\n# redeploy with certs, mounting them in /host\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name hub-cache \\                                       \u001b[K\r\n  -v \"$(pwd):/host:ro\" \\\u001b[K\r\n  -v \"hub-cache:/var/lib/registry\" \\\u001b[K\r\n  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry \\                                 \u001b[K\r\n  -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \\                                       \u001b[K\r\n  -e REGISTRY_PROXY_USERNAME=\"$DOCKER_USER\" \\\u001b[K\r\n  -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b[K\r\n  -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\                                                 \u001b[K\r\n  -e REGISTRY_HTTP_TLS_KEY=/host/reg-key.pem \\\u001b[K\r\n  registry:2\u001b[K\r\n# add the ca cert to /etc/docker/certs.d/hub-cache:5000 in builder                                 \u001b[K\r\n# also"]
[74.058723, "o", " note the https on the --registry-mirror arg                                                 \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\                                \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\n                                                                                  125,1         59%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                                                  \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[6;1H\u001b[?12l\u001b[?25h\u001b[?1006h\u001b[?1000h"]
[74.873753, "o", "\u001b[25;85H6\u001b[7;1H"]
[75.372711, "o", "\u001b[25;85H7\u001b[8;1H"]
[75.403014, "o", "\u001b[25;85H8\u001b[9;1H"]
[75.433767, "o", "\u001b[25;85H9\u001b[10;1H"]
[75.46537, "o", "\u001b[25;84H30\u001b[11;1H"]
[75.495554, "o", "\u001b[25;85H1\u001b[12;1H"]
[75.523394, "o", "\u001b[25;85H2\u001b[13;1H"]
[75.554342, "o", "\u001b[25;85H3\u001b[14;1H"]
[75.585001, "o", "\u001b[25;85H4\u001b[15;1H"]
[75.618125, "o", "\u001b[25;85H5\u001b[16;1H"]
[75.647431, "o", "\u001b[25;85H6\u001b[17;1H"]
[75.675881, "o", "\u001b[25;85H7\u001b[18;1H"]
[75.708297, "o", "\u001b[25;85H8\u001b[19;1H"]
[75.735762, "o", "\u001b[1;24r\u001b[24;1H\ndocker container run --env-file .env \\\u001b[25;83H\u001b[K139,1\u001b[9C59%\u001b[1;26r\u001b[19;1H"]
[75.765354, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[2C-d --net cache --restart unless-stopped --name builder --privileged \\\u001b[25;83H\u001b[K140,1\u001b[9C60%\u001b[1;26r\u001b[19;1H"]
[75.798846, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[2C--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\\u001b[25;83H\u001b[K141,1\u001b[9C60%\u001b[1;26r\u001b[19;1H"]
[75.829341, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[2C-v dind:/var/lib/docker \\\u001b[25;83H\u001b[K142,1\u001b[9C61%\u001b[1;26r\u001b[19;1H"]
[75.860009, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[2Cdocker:dind --registry-mirror https://hub-cache:5000\u001b[25;83H\u001b[K143,1\u001b[9C61%\u001b[1;26r\u001b[19;1H"]
[75.892496, "o", "\u001b[1;24r\u001b[24;1H\n# now try to run a pull\u001b[25;83H\u001b[K144,1\u001b[9C62%\u001b[1;26r\u001b[19;1H"]
[75.926343, "o", "\u001b[1;24r\u001b[24;1H\ndocker container exec -it builder sh\u001b[25;83H\u001b[K145,1\u001b[9C62%\u001b[1;26r\u001b[19;1H"]
[75.959246, "o", "\u001b[1;24r\u001b[24;1H\ntime docker image pull sudobmitch/demo:ubuntu\u001b[25;83H\u001b[K146,1\u001b[9C63%\u001b[1;26r\u001b[19;1H"]
[75.989992, "o", "\u001b[1;24r\u001b[24;1H\n# that worked, so nothing broken, lets try that pull again\u001b[25;83H\u001b[K147,1\u001b[9C63%\u001b[1;26r\u001b[19;1H"]
[76.022728, "o", "\u001b[1;24r\u001b[24;1H\ndocker image pull hub-cache:5000/ubuntu\u001b[25;83H\u001b[K148,1\u001b[9C64%\u001b[1;26r\u001b[19;1H"]
[76.053997, "o", "\u001b[1;24r\u001b[24;1H\n# that didn't work, hmm...\u001b[25;83H\u001b[K149,1\u001b[9C64%\u001b[1;26r\u001b[19;1H"]
[76.481197, "o", "\u001b[1;24r\u001b[24;1H\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu\u001b[25;83H\u001b[K150,1\u001b[9C65%\u001b[1;26r\u001b[19;1H"]
[76.981816, "o", "\u001b[1;24r\u001b[24;1H\n# private image works, why didn't the other image work?\u001b[25;83H\u001b[K151,1\u001b[9C65%\u001b[1;26r\u001b[19;1H"]
[77.011941, "o", "\u001b[1;24r\u001b[24;1H\ndocker image pull hub-cache:5000/library/ubuntu\u001b[25;83H\u001b[K152,1\u001b[9C66%\u001b[1;26r\u001b[19;1H"]
[77.0439, "o", "\u001b[1;24r\u001b[24;1H\n# ah ha, library is the repository for official images\u001b[25;83H\u001b[K153,1\u001b[9C66%\u001b[1;26r\u001b[19;1H"]
[77.073957, "o", "\u001b[1;24r\u001b[24;1H\nexit\u001b[25;83H\u001b[K154,1\u001b[9C67%\u001b[1;26r\u001b[19;1H"]
[77.103823, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[25;83H\u001b[K155,1\u001b[9C67%\u001b[1;26r\u001b[19;1H"]
[77.440961, "o", "\u001b[25;85H4\u001b[18;1H"]
[77.941433, "o", "\u001b[25;85H3\u001b[17;1H"]
[77.97158, "o", "\u001b[25;85H2\u001b[16;1H"]
[78.002615, "o", "\u001b[25;85H1\u001b[15;1H"]
[78.030332, "o", "\u001b[25;85H0\u001b[14;1H"]
[78.0627, "o", "\u001b[25;84H49\u001b[13;1H"]
[78.090261, "o", "\u001b[25;85H8\u001b[12;1H"]
[78.361093, "o", "\u001b[25;85H7\u001b[11;1H"]
[78.553312, "o", "\u001b[25;85H6\u001b[10;1H"]
[78.752931, "o", "\u001b[25;85H5\u001b[9;1H"]
[78.92139, "o", "\u001b[25;85H4\u001b[8;1H"]
[79.377002, "o", "\u001b[25;85H5\u001b[9;1H"]
[79.552917, "o", "\u001b[25;85H6\u001b[10;1H"]
[79.784954, "o", "\u001b[25;87H2\u001b[10;2H"]
[79.992928, "o", "\u001b[25;87H3\u001b[10;3H"]
[81.418425, "o", "\u001b[?25l\u001b[H# also note the https on the --registry-mirror arg                                             \u001b[30m\u001b[43m[0/0]\u001b[2;1H\u001b[39m\u001b[49mdocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\                                \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try t"]
[81.418822, "o", "o run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image works, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\nexit\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n                                                                                  146,3         67%\u001b[K\u001b[10;3H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[81.419766, "o", "\u001b[?25l\u001b[26;1H\u001b[30m\u001b[42m[preso] 0:bash- 1:[tmux]*                                              \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[10;3H\u001b[?12l\u001b[?25h"]
[81.71061, "o", "\u001b[30m\u001b[43m-\b\u001b(B\u001b[m"]
[81.974179, "o", "\u001b[30m\u001b[43m--\b\u001b(B\u001b[m"]
[82.476336, "o", "\b\u001b[30m\u001b[43m--m\b\u001b(B\u001b[m"]
[82.506672, "o", "\b\b\u001b[30m\u001b[43m--mo\b\u001b(B\u001b[m"]
[82.538194, "o", "\u001b[3G\u001b[30m\u001b[43m--mou\b\u001b(B\u001b[m"]
[82.567548, "o", "\u001b[3G\u001b[30m\u001b[43m--moun\b\u001b(B\u001b[m"]
[82.597996, "o", "\u001b[3G\u001b[30m\u001b[43m--mount\b\u001b(B\u001b[m"]
[82.626089, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \b\u001b(B\u001b[m"]
[82.656463, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"\b\u001b(B\u001b[m"]
[82.68642, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"t\b\u001b(B\u001b[m"]
[82.716852, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"ty\b\u001b(B\u001b[m"]
[82.748566, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"typ\b\u001b(B\u001b[m"]
[82.779426, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type\b\u001b(B\u001b[m"]
[82.808029, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=\b\u001b(B\u001b[m"]
[82.838222, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=b\b\u001b(B\u001b[m"]
[82.868374, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bi\b\u001b(B\u001b[m"]
[82.901515, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bin\b\u001b(B\u001b[m"]
[82.929309, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind\b\u001b(B\u001b[m"]
[82.959246, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,\b\u001b(B\u001b[m"]
[82.990107, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,s\b\u001b(B\u001b[m"]
[83.023165, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,sr\b\u001b(B\u001b[m"]
[83.05386, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src\b\u001b(B\u001b[m"]
[83.083654, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=\b\u001b(B\u001b[m"]
[83.113926, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$\b\u001b(B\u001b[m"]
[83.143457, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(\b\u001b(B\u001b[m"]
[83.173615, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(p\b\u001b(B\u001b[m"]
[83.203878, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pw\b\u001b(B\u001b[m"]
[83.233417, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd\b\u001b(B\u001b[m"]
[83.263679, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)\b\u001b(B\u001b[m"]
[83.293414, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/\b\u001b(B\u001b[m"]
[83.326133, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/c\b\u001b(B\u001b[m"]
[83.354924, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca\b\u001b(B\u001b[m"]
[83.385222, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.\b\u001b(B\u001b[m"]
[83.416355, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.p\b\u001b(B\u001b[m"]
[83.448429, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pe\b\u001b(B\u001b[m"]
[83.478556, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem\b\u001b(B\u001b[m"]
[83.510221, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,\b\u001b(B\u001b[m"]
[83.538393, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,d\b\u001b(B\u001b[m"]
[83.568409, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,ds\b\u001b(B\u001b[m"]
[83.598561, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst\b\u001b(B\u001b[m"]
[83.629246, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=\b\u001b(B\u001b[m"]
[83.661185, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/\b\u001b(B\u001b[m"]
[83.691906, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/e\b\u001b(B\u001b[m"]
[83.723558, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/et\b\u001b(B\u001b[m"]
[83.750946, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc\b\u001b(B\u001b[m"]
[83.779858, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/\b\u001b(B\u001b[m"]
[83.814164, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/d\b\u001b(B\u001b[m"]
[83.843306, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/do\b\u001b(B\u001b[m"]
[83.872044, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/doc\b\u001b(B\u001b[m"]
[83.902055, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/dock\b\u001b(B\u001b[m"]
[83.932287, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docke\b\u001b(B\u001b[m"]
[83.9613, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker\b\u001b(B\u001b[m"]
[83.99525, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/\b\u001b(B\u001b[m"]
[84.024628, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/c\b\u001b(B\u001b[m"]
[84.053402, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/ce\b\u001b(B\u001b[m"]
[84.085072, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/cer\b\u001b(B\u001b[m"]
[84.118726, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/cert\b\u001b(B\u001b[m"]
[84.149654, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs\b\u001b(B\u001b[m"]
[84.176071, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.\b\u001b(B\u001b[m"]
[84.206599, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d\b\u001b(B\u001b[m"]
[84.2408, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/\b\u001b(B\u001b[m"]
[84.270893, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/h\b\u001b(B\u001b[m"]
[84.299209, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hu\b\u001b(B\u001b[m"]
[84.329246, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub\b\u001b(B\u001b[m"]
[84.362195, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-\b\u001b(B\u001b[m"]
[84.390232, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-c\b\u001b(B\u001b[m"]
[84.421104, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-ca\b\u001b(B\u001b[m"]
[84.453765, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cac\b\u001b(B\u001b[m"]
[84.48215, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cach\b\u001b(B\u001b[m"]
[84.515361, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache\b\u001b(B\u001b[m"]
[84.543091, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:\b\u001b(B\u001b[m"]
[84.572187, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5\b\u001b(B\u001b[m"]
[84.604142, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:50\b\u001b(B\u001b[m"]
[84.634781, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:500\b\u001b(B\u001b[m"]
[84.6656, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000\b\u001b(B\u001b[m"]
[84.695186, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/\b\u001b(B\u001b[m"]
[84.72502, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/c\b\u001b(B\u001b[m"]
[84.756175, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca\b\u001b(B\u001b[m"]
[84.787185, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.\b\u001b(B\u001b[m"]
[84.818006, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.c\b\u001b(B\u001b[m"]
[84.849335, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.cr\b\u001b(B\u001b[m"]
[84.879193, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt\b\u001b(B\u001b[m"]
[84.908787, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,\b\u001b(B\u001b[m"]
[84.939574, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,r\b\u001b(B\u001b[m"]
[84.97089, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,re\b\u001b(B\u001b[m"]
[85.001627, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,rea\b\u001b(B\u001b[m"]
[85.030456, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,read\b\u001b(B\u001b[m"]
[85.064463, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,reado\b\u001b(B\u001b[m"]
[85.094474, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readon\b\u001b(B\u001b[m"]
[85.125572, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonl\b\u001b(B\u001b[m"]
[85.414319, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\b\u001b(B\u001b[m"]
[85.609083, "o", "\u001b[3G\u001b[30m\u001b[43m--mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\"\b\u001b(B\u001b[m"]
[86.094098, "o", "\u001b[?25l\u001b[H# also note the https on the --registry-mirror arg                                                 \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\                                \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocke"]
[86.094146, "o", "r container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image works, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\nexit\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n                                                                                  146,3         67%\u001b[K\u001b[10;3H\u001b[?12l\u001b[?25h\u001b[?1006h\u001b[?1000h"]
[86.094528, "o", "\u001b[?25l\u001b[26;1H\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                                                  \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[10;3H\u001b[?12l\u001b[?25h"]
[86.769461, "o", "\u001b[25;85H5\u001b[9;3H"]
[86.945159, "o", "\u001b[25;85H4\u001b[8;3H"]
[87.129017, "o", "\u001b[25;85H3\u001b[7;3H"]
[87.310901, "o", "\u001b[25;85H2\u001b[6;3H"]
[87.497115, "o", "\u001b[1;24r\u001b[1;1H\u001b[1L\u001b[1;1H# add the ca cert to /etc/docker/certs.d/hub-cache:5000 in builder\u001b[25;83H\u001b[K141,3\u001b[9C67%\u001b[1;26r\u001b[6;3H"]
[87.920923, "o", "\u001b[1;24r\u001b[1;1H\u001b[1L\u001b[1;3Hregistry:2\u001b[25;83H\u001b[K140,3\u001b[9C66%\u001b[1;26r\u001b[6;3H"]
[88.20921, "o", "\u001b[25;87H4\u001b[6;4H"]
[88.401233, "o", "\u001b[25;87H5\u001b[6;5H"]
[88.58953, "o", "\u001b[25;87H6\u001b[6;6H"]
[89.882697, "o", "\u001b[?25l\u001b[H  registry:2                                                                                   \u001b[30m\u001b[43m[0/0]\u001b[2;1H\u001b[39m\u001b[49m# add the ca cert to /etc/docker/certs.d/hub-cache:5000 in builder                                 \u001b[K\r\n# also note the https on the --registry-mirror arg\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\                                \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonl"]
[89.883085, "o", "y\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image works, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\n                                                                                  140,6         66%\u001b[K\u001b[6;6H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[89.884159, "o", "\u001b[?25l\u001b[26;1H\u001b[30m\u001b[42m[preso] 0:bash- 1:[tmux]*                                              \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[6;6H\u001b[?12l\u001b[?25h"]
[90.265406, "o", "\u001b[30m\u001b[43m\"\b\u001b(B\u001b[m"]
[90.57715, "o", "\u001b[30m\u001b[43m\"$\b\u001b(B\u001b[m"]
[91.07643, "o", "\b\u001b[30m\u001b[43m\"$(\b\u001b(B\u001b[m"]
[91.103203, "o", "\b\b\u001b[30m\u001b[43m\"$(p\b\u001b(B\u001b[m"]
[91.135004, "o", "\u001b[3D\u001b[30m\u001b[43m\"$(pw\b\u001b(B\u001b[m"]
[91.168716, "o", "\u001b[4D\u001b[30m\u001b[43m\"$(pwd\b\u001b(B\u001b[m"]
[91.198519, "o", "\u001b[5D\u001b[30m\u001b[43m\"$(pwd)\b\u001b(B\u001b[m"]
[91.225856, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/\b\u001b(B\u001b[m"]
[91.256109, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/c\b\u001b(B\u001b[m"]
[91.286703, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca\b\u001b(B\u001b[m"]
[91.32005, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.\b\u001b(B\u001b[m"]
[91.349433, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.p\b\u001b(B\u001b[m"]
[91.3798, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pe\b\u001b(B\u001b[m"]
[91.406448, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem\b\u001b(B\u001b[m"]
[91.436922, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:\b\u001b(B\u001b[m"]
[91.467549, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/\b\u001b(B\u001b[m"]
[91.500838, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/e\b\u001b(B\u001b[m"]
[91.530484, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/et\b\u001b(B\u001b[m"]
[91.56043, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc\b\u001b(B\u001b[m"]
[91.589513, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/\b\u001b(B\u001b[m"]
[91.61988, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/d\b\u001b(B\u001b[m"]
[91.65009, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/do\b\u001b(B\u001b[m"]
[91.68112, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/doc\b\u001b(B\u001b[m"]
[91.710416, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/dock\b\u001b(B\u001b[m"]
[91.74175, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docke\b\u001b(B\u001b[m"]
[91.772058, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker\b\u001b(B\u001b[m"]
[91.80642, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/\b\u001b(B\u001b[m"]
[91.837726, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/c\b\u001b(B\u001b[m"]
[91.86496, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/ce\b\u001b(B\u001b[m"]
[91.898185, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/cer\b\u001b(B\u001b[m"]
[91.928932, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/cert\b\u001b(B\u001b[m"]
[91.960616, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs\b\u001b(B\u001b[m"]
[91.990888, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.\b\u001b(B\u001b[m"]
[92.017912, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d\b\u001b(B\u001b[m"]
[92.048429, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/\b\u001b(B\u001b[m"]
[92.078641, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/h\b\u001b(B\u001b[m"]
[92.109206, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hu\b\u001b(B\u001b[m"]
[92.139824, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub\b\u001b(B\u001b[m"]
[92.170444, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-\b\u001b(B\u001b[m"]
[92.202286, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-c\b\u001b(B\u001b[m"]
[92.234024, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-ca\b\u001b(B\u001b[m"]
[92.26517, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cac\b\u001b(B\u001b[m"]
[92.295482, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cach\b\u001b(B\u001b[m"]
[92.324262, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache\b\u001b(B\u001b[m"]
[92.357288, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:\b\u001b(B\u001b[m"]
[92.387984, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5\b\u001b(B\u001b[m"]
[92.419018, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:50\b\u001b(B\u001b[m"]
[92.447192, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:500\b\u001b(B\u001b[m"]
[92.481298, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000\b\u001b(B\u001b[m"]
[92.51087, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/\b\u001b(B\u001b[m"]
[92.539585, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/c\b\u001b(B\u001b[m"]
[92.569984, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca\b\u001b(B\u001b[m"]
[92.600095, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.\b\u001b(B\u001b[m"]
[92.63028, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.c\b\u001b(B\u001b[m"]
[92.659997, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.cr\b\u001b(B\u001b[m"]
[92.690424, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt\b\u001b(B\u001b[m"]
[92.72036, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:\b\u001b(B\u001b[m"]
[92.749909, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:r\b\u001b(B\u001b[m"]
[92.779856, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\b\u001b(B\u001b[m"]
[92.810661, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\"\b\u001b(B\u001b[m"]
[92.841413, "o", "\u001b[6G\u001b[30m\u001b[43m\"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \b\u001b(B\u001b[m"]
[93.674154, "o", "\u001b[?25l\u001b[H  registry:2\u001b[K\r\n# add the ca cert to /etc/docker/certs.d/hub-cache:5000 in builder                                 \u001b[K\r\n# also note the https on the --registry-mirror arg                                                 \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\                                \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --"]
[93.674265, "o", "registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image works, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\n                                                                                  140,6         66%\u001b[K\u001b[6;6H\u001b[?12l\u001b[?25h\u001b[?1006h\u001b[?1000h"]
[93.675588, "o", "\u001b[?25l\u001b[26;1H\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                                                  \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[6;6H\u001b[?12l\u001b[?25h"]
[93.928866, "o", "\u001b[25;87H5\u001b[6;5H"]
[94.297071, "o", "\u001b[25;87H6\u001b[6;6H"]
[94.796602, "o", "\u001b[25;87H7\u001b[6;7H"]
[94.8234, "o", "$\u001b[46m(\u001b[49mpwd\u001b[46m)\u001b[25;87H\u001b[49m8\u001b[6;8H"]
[94.854981, "o", "(pwd)\u001b[25;87H9\u001b[6;9H"]
[94.888487, "o", "\u001b[25;87H10\u001b[6;10H"]
[94.916019, "o", "\u001b[25;88H1\u001b[6;11H"]
[94.945823, "o", "\u001b[3D\u001b[46m(\u001b[49mpwd\u001b[46m)\u001b[25;88H\u001b[49m2\u001b[6;12H"]
[94.976063, "o", "\u001b[4D(pwd)\u001b[25;88H3\u001b[6;13H"]
[95.006197, "o", "\u001b[25;88H4\u001b[6;14H"]
[95.036789, "o", "\u001b[25;88H5\u001b[6;15H"]
[95.067894, "o", "\u001b[25;88H6\u001b[6;16H"]
[95.09797, "o", "\u001b[25;88H7\u001b[6;17H"]
[95.127855, "o", "\u001b[25;88H8\u001b[6;18H"]
[95.160213, "o", "\u001b[25;88H9\u001b[6;19H"]
[95.188952, "o", "\u001b[25;87H20\u001b[6;20H"]
[95.220782, "o", "\u001b[25;88H1\u001b[6;21H"]
[95.250023, "o", "\u001b[25;88H2\u001b[6;22H"]
[95.27962, "o", "\u001b[25;88H3\u001b[6;23H"]
[95.309922, "o", "\u001b[25;88H4\u001b[6;24H"]
[95.343169, "o", "\u001b[25;88H5\u001b[6;25H"]
[95.373955, "o", "\u001b[25;88H6\u001b[6;26H"]
[95.402373, "o", "\u001b[25;88H7\u001b[6;27H"]
[95.432586, "o", "\u001b[25;88H8\u001b[6;28H"]
[95.46249, "o", "\u001b[25;88H9\u001b[6;29H"]
[95.492149, "o", "\u001b[25;87H30\u001b[6;30H"]
[95.522814, "o", "\u001b[25;88H1\u001b[6;31H"]
[95.553939, "o", "\u001b[25;88H2\u001b[6;32H"]
[95.584732, "o", "\u001b[25;88H3\u001b[6;33H"]
[95.614693, "o", "\u001b[25;88H4\u001b[6;34H"]
[95.644954, "o", "\u001b[25;88H5\u001b[6;35H"]
[95.674474, "o", "\u001b[25;88H6\u001b[6;36H"]
[95.706625, "o", "\u001b[25;88H7\u001b[6;37H"]
[95.734664, "o", "\u001b[25;88H8\u001b[6;38H"]
[95.764131, "o", "\u001b[25;88H9\u001b[6;39H"]
[95.794677, "o", "\u001b[25;87H40\u001b[6;40H"]
[95.825029, "o", "\u001b[25;88H1\u001b[6;41H"]
[95.855473, "o", "\u001b[25;88H2\u001b[6;42H"]
[95.884838, "o", "\u001b[25;88H3\u001b[6;43H"]
[95.915137, "o", "\u001b[25;88H4\u001b[6;44H"]
[95.945473, "o", "\u001b[25;88H5\u001b[6;45H"]
[95.976357, "o", "\u001b[25;88H6\u001b[6;46H"]
[96.006221, "o", "\u001b[25;88H7\u001b[6;47H"]
[96.036471, "o", "\u001b[25;88H8\u001b[6;48H"]
[96.066083, "o", "\u001b[25;88H9\u001b[6;49H"]
[96.30511, "o", "\u001b[25;87H50\u001b[6;50H"]
[98.833576, "o", "\u001b[?25l\u001b[H  registry:2\u001b[K\r\n# add the ca cert to /etc/docker/certs.d/hub-cache:5000 in builder                                 \u001b[K\r\n# also note the https on the --registry-mirror arg                                                 \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\                                \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --"]
[98.833677, "o", "registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image works, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\n                                                                                  140,50        66%\u001b[K\u001b[41m\u001b[11;48H     \u001b[12;48H \u001b[C\u001b[C\u001b[C \u001b[13;48H \u001b[C\u001b[C\u001b[C \u001b[14;48H \u001b[C\u001b[C\u001b[C \u001b[15;48H     \u001b[1;95H\u001b[49m\u001b[31m100x25\u001b[H\u001b[26d\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                      "]
[98.834017, "o", "                            \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[6;50H"]
[99.836053, "o", "\u001b[H  registry:2\u001b[K\r\n# add the ca cert to /etc/docker/certs.d/hub-cache:5000 in builder                                 \u001b[K\r\n# also note the https on the --registry-mirror arg                                                 \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\                                \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --regist"]
[99.836421, "o", "ry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image works, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\n                                                                                  140,50        66%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                                                  \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[6;50H\u001b[?12l\u001b[?25h"]
[99.977401, "o", "\u001b[25;85H1,27\u001b[7;27H"]
[100.241158, "o", "\u001b[25;85H2,50\u001b[8;50H"]
[100.841147, "o", "\u001b[25;85H3\u001b[9;50H"]
[101.073082, "o", "\u001b[25;85H4,38\u001b[10;38H"]
[102.497049, "o", "\u001b[25;87H1 \u001b[10;1H"]
[103.714293, "o", "\u001b[?25l\u001b[H  registry:2                                                                                   \u001b[30m\u001b[43m[0/0]\u001b[2;1H\u001b[39m\u001b[49m# add the ca cert to /etc/docker/certs.d/hub-cache:5000 in builder                                 \u001b[K\r\n# also note the https on the --registry-mirror arg\u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\                                \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonl"]
[103.714576, "o", "y\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image works, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\n                                                                                  144,1         66%\u001b[K\u001b[10;1H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[103.715843, "o", "\u001b[?25l\u001b[26d\u001b[30m\u001b[42m[preso] 0:bash- 1:[tmux]*                                              \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[10;1H\u001b[?12l\u001b[?25h"]
[104.105367, "o", "\u001b[30m\u001b[43md\r\u001b(B\u001b[m"]
[104.393301, "o", "\u001b[30m\u001b[43mdocker container run --env-file .env \\                                                              \u001b[11;1H \r\u001b(B\u001b[m"]
[104.60061, "o", "\u001b[30m\u001b[43m  -d --net cache --restart unless-stopped --name builder --privileged \\                             \u001b[12;1H \r\u001b(B\u001b[m"]
[104.776898, "o", "\u001b[30m\u001b[43m  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\    \u001b[13;1H \r\u001b(B\u001b[m"]
[104.960783, "o", "\u001b[30m\u001b[43m  -v dind:/var/lib/docker \\                                                                         \u001b[14;1H \r\u001b(B\u001b[m"]
[105.13701, "o", "\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hub-cache:5000                                              \u001b[15;1H#\r\u001b(B\u001b[m"]
[105.385243, "o", "\u001b[A\u001b[30m\u001b[43m \u001b[39m\u001b[49m docker:dind --registry-mirror https://hub-cache:5000                                              \u001b[15;1H#\u001b[14;1H\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hub-cache:5000 \b\u001b(B\u001b[m"]
[105.977853, "o", "\r\u001b[30m\u001b[43m  docker:dind --registry-mirror https://hub-cache:5000\u001b[39m\u001b[49m \b\b"]
[107.688749, "o", "\u001b]52;;ZG9ja2VyIGNvbnRhaW5lciBydW4gLS1lbnYtZmlsZSAuZW52IFwKICAtZCAtLW5ldCBjYWNoZSAtLXJlc3RhcnQgdW5sZXNzLXN0b3BwZWQgLS1uYW1lIGJ1aWxkZXIgLS1wcml2aWxlZ2VkIFwKICAtLW1vdW50ICJ0eXBlPWJpbmQsc3JjPSQocHdkKS9jYS5wZW0sZHN0PS9ldGMvZG9ja2VyL2NlcnRzLmQvaHViLWNhY2hlOjUwMDAvY2EuY3J0LHJlYWRvbmx5IiBcCiAgLXYgZGluZDovdmFyL2xpYi9kb2NrZXIgXAogIGRvY2tlcjpkaW5kIC0tcmVnaXN0cnktbWlycm9yIGh0dHBzOi8vaHViLWNhY2hlOjUwMDA=\u0007\u001b[10;1H\u001b[?1006h\u001b[?1000h"]
[107.691133, "o", "\u001b[?25l\u001b[H  registry:2\u001b[K\r\n# add the ca cert to /etc/docker/certs.d/hub-cache:5000 in builder                                 \u001b[K\r\n# also note the https on the --registry-mirror arg                                                 \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\                                \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --"]
[107.691438, "o", "registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image works, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\n                                                                                  144,1         66%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                                                  \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[10;1H\u001b[?12l\u001b[?25h"]
[108.42748, "o", "\u001b[?25l\u001b[32m\u001b[7B───────────────────────────────────────────────────\u001b[39m─────────────────────────────────────────────────\u001b[1;1H\u001b(B\u001b[m>   -e REGISTRY_PROXY_PASSWORD=\"$DOCKER_TOKEN\" \\\u001b[K\r\n>   -e REGISTRY_HTTP_TLS_CERTIFICATE=/host/reg.pem \\                                               \u001b[K\r\n>   -e REGISTRY_HTTP_TLS_KEY=/host/reg-key.pem \\\u001b[K\r\n>   registry:2\u001b[K\r\n6fc054d09bcf133dba60f8cdc98fdc5522077c3b7c2e4ae2c3c99e25302e249d                                   \u001b[K\r\n$ # add the ca cert to /etc/docker/certs.d/hub-cache:5000 in builder                               \u001b[K\r\n$ # also note the https on the --registry-mirror arg                                               \u001b[K\r\n$ docker container run --env-file .env \\\u001b[K\r\n>   -d --net cache --restart unless-stopped --name builder --privileged \\                          \u001b[K\r\n> "]
[108.427837, "o", "  -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\                              \u001b[K\r\n>   -v dind:/var/lib/docker \\\u001b[K\r\n>   docker:dind --registry-mirror https://hub-cache:5000                                           \u001b[K\r\ndocker: Error response from daemon: invalid volume specification: '/home/bmitch/data/git/presentations/registry/example/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro'.                          \u001b[K\r\nSee 'docker run --help'.\u001b[K\r\n$\u001b[K\u001b[18;1H9.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\(linux\\))\" http.response.contenttype=\"application/octet-stream\" http.response.duration=157.076482ms http.response.status=200 http.response.written=28556247                      \u001b[K\r\n192.168.70.3 - - [10/May/2020:21:58:01 +0000] \"GET /v2/sudobmitch/demo/blobs/sha256:d51af753c3d3a984351448ec0f85ddafc580680fd6dfce9f4b09fdb367ee1e3e HTTP/1.1\" 200 28556247 \"\" \"docker/19.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.1"]
[108.428105, "o", "9.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\\\(linux\\\\))\"\u001b[K\r\n$\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash* 1:vi-                                                  \"bmitch-t490\" 18:00 10-May-20\u001b(B\u001b[m\u001b[16;3H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[109.184697, "o", "\u001b[?25l\u001b[26;1H\u001b[30m\u001b[42m[preso] 0:bash* 1:vi-                                                  \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[16;3H\u001b[?12l\u001b[?25h"]
[109.586105, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3Hdocker container run --env-file .env \\\u001b[1;26r\u001b[16;1H\u001b[1;16r\u001b[16;1H\n\u001b[A>   -d --net cache --restart unless-stopped --name builder --privileged \\\r\n> \u001b[1;26r\u001b[16;3H"]
[109.586995, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3H  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\\u001b[1;26r\u001b[16;1H> "]
[109.587294, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3H  -v dind:/var/lib/docker \\\u001b[1;26r\u001b[16;1H> "]
[109.587669, "o", "  docker:dind --registry-mirror https://hub-cache:5000"]
[111.257833, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[1;26r\u001b[16;1H"]
[111.384039, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[Ad3d6db0239721fe4962737d78818848843a32840c1ff62f39abb7aaa525685f5\u001b[1;26r\u001b[16;1H"]
[111.742711, "o", "$ "]
[113.356236, "o", "\u001b[?25l\u001b[H  registry:2\u001b[K\r\n# add the ca cert to /etc/docker/certs.d/hub-cache:5000 in builder                                 \u001b[K\r\n# also note the https on the --registry-mirror arg                                                 \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\                                \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --"]
[113.356373, "o", "registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image works, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\n                                                                                  144,1         66%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                                                  \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[10;1H\u001b[?12l\u001b[?25h\u001b[?1006h\u001b[?1000h"]
[114.065151, "o", "\u001b[25;85H5\u001b[11;1H"]
[114.564636, "o", "\u001b[25;85H6\u001b[12;1H"]
[114.595147, "o", "\u001b[25;85H7\u001b[13;1H"]
[114.62602, "o", "\u001b[25;85H8\u001b[14;1H"]
[114.652502, "o", "\u001b[25;85H9\u001b[15;1H"]
[114.68317, "o", "\u001b[25;84H50\u001b[16;1H"]
[114.71244, "o", "\u001b[25;85H1\u001b[17;1H"]
[114.745444, "o", "\u001b[25;85H2\u001b[18;1H"]
[114.774699, "o", "\u001b[25;85H3\u001b[19;1H"]
[114.80763, "o", "\u001b[1;24r\u001b[24;1H\nexit\u001b[25;83H\u001b[K154,1\u001b[9C67%\u001b[1;26r\u001b[19;1H"]
[114.834236, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[25;83H\u001b[K155,1\u001b[9C67%\u001b[1;26r\u001b[19;1H"]
[114.864485, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[25;83H\u001b[K156,1\u001b[9C68%\u001b[1;26r\u001b[19;1H"]
[114.89837, "o", "\u001b[1;24r\u001b[24;1H\n## 6 - Configure Compose\u001b[25;83H\u001b[K157,1\u001b[9C68%\u001b[1;26r\u001b[19;1H"]
[114.92857, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[25;83H\u001b[K158,1\u001b[9C69%\u001b[1;26r\u001b[19;1H"]
[114.959213, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[25;83H\u001b[K159,1\u001b[9C69%\u001b[1;26r\u001b[19;1H"]
[114.991189, "o", "\u001b[1;24r\u001b[24;1H\n\u001b[31m\u001b[1m#\u001b[35m remove non-compose instances\u001b(B\u001b[m\u001b[25;83H\u001b[K160,1\u001b[9C70%\u001b[1;26r\u001b[19;1H"]
[115.344942, "o", "\u001b[25;84H59\u001b[18;1H"]
[115.845258, "o", "\u001b[25;85H8\u001b[17;1H"]
[115.876325, "o", "\u001b[25;85H7\u001b[16;1H"]
[115.905767, "o", "\u001b[25;85H6\u001b[15;1H"]
[115.937602, "o", "\u001b[25;85H5\u001b[14;1H"]
[115.964615, "o", "\u001b[25;85H4\u001b[13;1H"]
[115.994168, "o", "\u001b[25;85H3\u001b[12;1H"]
[116.024282, "o", "\u001b[25;85H2\u001b[11;1H"]
[116.055057, "o", "\u001b[25;85H1\u001b[10;1H"]
[116.085192, "o", "\u001b[25;85H0\u001b[9;1H"]
[116.119426, "o", "\u001b[25;84H49\u001b[8;1H"]
[116.63318, "o", "\u001b[25;84H50\u001b[9;1H"]
[117.522676, "o", "\u001b[?25l\u001b[H  docker:dind --registry-mirror https://hub-cache:5000                                         \u001b[30m\u001b[43m[0/0]\u001b[2;1H\u001b[39m\u001b[49m# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b"]
[117.523044, "o", "[K\r\n# private image works, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\nexit\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n## 6 - Configure Compose\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[31m\u001b[1m#\u001b[35m remove non-compose instances\u001b(B\u001b[m\u001b[K\r\n                                                                                  150,1         70%\u001b[K\u001b[9;1H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[117.946527, "o", "\u001b[30m\u001b[43md\u001b[?25l\u001b[26;1H\u001b[42m[preso] 0:bash- 1:[tmux]*                                              \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[9;1H\u001b[?12l\u001b[?25h"]
[118.31317, "o", "\u001b[30m\u001b[43mdocker container exec -it builder sh                                                                \u001b[10;1Ht\r\u001b(B\u001b[m"]
[118.569151, "o", "\u001b[30m\u001b[43mtime docker image pull sudobmitch/demo:ubuntu                                                       \u001b[11;1H#\r\u001b(B\u001b[m"]
[118.993511, "o", "\u001b[A\u001b[30m\u001b[43mt\u001b[39m\u001b[49mime docker image pull sudobmitch/demo:ubuntu                                                       \u001b[11;1H#\u001b[10;1H\u001b[30m\u001b[43mtime docker image pull sudobmitch/demo:ubuntu \b\u001b(B\u001b[m"]
[120.688715, "o", "\u001b]52;;ZG9ja2VyIGNvbnRhaW5lciBleGVjIC1pdCBidWlsZGVyIHNoCnRpbWUgZG9ja2VyIGltYWdlIHB1bGwgc3Vkb2JtaXRjaC9kZW1vOnVidW50dQo=\u0007\u001b[9;1H\u001b[?1006h\u001b[?1000h"]
[120.69108, "o", "\u001b[?25l\u001b[H  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image wo"]
[120.691407, "o", "rks, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\nexit\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n## 6 - Configure Compose\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[31m\u001b[1m#\u001b[35m remove non-compose instances\u001b(B\u001b[m\u001b[K\r\n                                                                                  150,1         70%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash- 1:vi*                                                  \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[9;1H\u001b[?12l\u001b[?25h"]
[121.338725, "o", "\u001b[?25l\u001b[32m\u001b[8B───────────────────────────────────────────────────\u001b[39m─────────────────────────────────────────────────\u001b[1;1H\u001b(B\u001b[m$ # also note the https on the --registry-mirror arg                                               \u001b[K\r\n$ docker container run --env-file .env \\\u001b[K\r\n>   -d --net cache --restart unless-stopped --name builder --privileged \\                          \u001b[K\r\n>   -v \"$(pwd)/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro\" \\                              \u001b[K\r\n>   -v dind:/var/lib/docker \\\u001b[K\r\n>   docker:dind --registry-mirror https://hub-cache:5000                                           \u001b[K\r\ndocker: Error response from daemon: invalid volume specification: '/home/bmitch/data/git/presentations/registry/example/ca.pem:/etc/docker/certs.d/hub-cache:5000/ca.crt:ro'.                        "]
[121.338909, "o", "  \u001b[K\r\nSee 'docker run --help'.\u001b[K\r\n$ docker container run --env-file .env \\\u001b[K\r\n>   -d --net cache --restart unless-stopped --name builder --privileged \\                          \u001b[K\r\n>   --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\ \u001b[K\r\n>   -v dind:/var/lib/docker \\\u001b[K\r\n>   docker:dind --registry-mirror https://hub-cache:5000                                           \u001b[K\r\nd3d6db0239721fe4962737d78818848843a32840c1ff62f39abb7aaa525685f5                                   \u001b[K\r\n$\u001b[K\u001b[18;1H9.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\(linux\\))\" http.response.contenttype=\"application/octet-stream\" http.response.duration=157.076482ms http.response.status=200 http.response.written=28556247                      \u001b[K\r\n192.168.70.3 - - [10/May/2020:21:58:01 +0000] \"GET /v2/sudobmitch/demo/blobs/sha256:d51af753c3d3a984351448ec0f85ddafc580680fd6dfce9f4b09fdb367ee1e3e HTTP/1.1\" 200 28556247 \"\" \"do"]
[121.338966, "o", "cker/19.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\\\(linux\\\\))\"\u001b[K\r\n$\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:bash* 1:vi-                                                  \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[16;3H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[122.290488, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;3Hdocker container exec -it builder sh\u001b[1;26r\u001b[16;1H"]
[122.375557, "o", "/ # "]
[122.37562, "o", "time docker imag"]
[122.375767, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[15;21He pull sudobmitch/demo:ubuntu\u001b[1;26r\u001b[16;1H"]
[122.712169, "o", "\u001b[1;16r\u001b[3S\u001b[13dubuntu: Pulling from sudobmitch/demo\r\nDigest: sha256:5747316366b8cc9e3021cd7286f42b2d6d81e3d743e2ab571f55bcd5df788cc8\r\nStatus: Image is up to date for sudobmitch/demo:ubuntu\u001b[1;26r\u001b[16;1H\u001b[1;16r\u001b[16;1H\n\u001b[Adocker.io/sudobmitch/demo:ubuntu"]
[122.712523, "o", "\u001b[1;26r\u001b[16;1H"]
[122.715755, "o", "\u001b[1;16r\u001b[3S\u001b[13dreal\u001b[4C0m 0.33s\r\nuser\u001b[4C0m 0.01s\r\nsys\u001b[5C0m 0.01s\u001b[1;26r\u001b[16;1H"]
[122.71605, "o", "/ # "]
[123.406176, "o", "\u001b[?25l\u001b[26;1H\u001b[30m\u001b[42m[preso] 0:docker* 1:vi-                                                \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[16;5H\u001b[?12l\u001b[?25h"]
[124.018507, "o", "\u001b[?25l\u001b[H  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image wo"]
[124.018626, "o", "rks, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\nexit\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n## 6 - Configure Compose\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[31m\u001b[1m#\u001b[35m remove non-compose instances\u001b(B\u001b[m\u001b[K\r\n                                                                                  150,1         70%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:docker- 1:vi*                                                \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[9;1H\u001b[?12l\u001b[?25h\u001b[?1006h\u001b[?1000h"]
[124.953338, "o", "\u001b[25;85H1\u001b[10;1H"]
[125.177199, "o", "\u001b[25;85H2\u001b[11;1H"]
[125.361086, "o", "\u001b[25;85H3\u001b[12;1H"]
[127.458844, "o", "\u001b[?25l\u001b[H  docker:dind --registry-mirror https://hub-cache:5000                                         \u001b[30m\u001b[43m[0/0]\u001b[2;1H\u001b[39m\u001b[49m# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b"]
[127.458963, "o", "[K\r\n# private image works, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\nexit\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n## 6 - Configure Compose\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[31m\u001b[1m#\u001b[35m remove non-compose instances\u001b(B\u001b[m\u001b[K\r\n                                                                                  153,1         70%\u001b[K\u001b[12;1H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[127.460277, "o", "\u001b[?25l\u001b[26d\u001b[30m\u001b[42m[preso] 0:docker- 1:[tmux]*                                            \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[12;1H\u001b[?12l\u001b[?25h"]
[127.69698, "o", "\u001b[30m\u001b[43md\r\u001b(B\u001b[m"]
[128.041401, "o", "\u001b[30m\u001b[43mdocker image pull hub-cache:5000/ubuntu                                                             \u001b[13;1H#\r\u001b(B\u001b[m"]
[128.165627, "o", "\u001b[A\u001b[30m\u001b[43md\u001b[39m\u001b[49mocker image pull hub-cache:5000/ubuntu                                                             \u001b[13;1H#\u001b[12;1H\u001b[30m\u001b[43mdocker image pull hub-cache:5000/ubuntu \b\u001b(B\u001b[m"]
[128.664527, "o", "\u001b]52;;ZG9ja2VyIGltYWdlIHB1bGwgaHViLWNhY2hlOjUwMDAvdWJ1bnR1Cg==\u0007\r\u001b[?1006h\u001b[?1000h"]
[128.666956, "o", "\u001b[?25l\u001b[H  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image wo"]
[128.667053, "o", "rks, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\nexit\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n## 6 - Configure Compose\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[31m\u001b[1m#\u001b[35m remove non-compose instances\u001b(B\u001b[m\u001b[K\r\n                                                                                  153,1         70%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:docker- 1:vi*                                                \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[12;1H\u001b[?12l\u001b[?25h"]
[129.274589, "o", "\u001b[?25l\u001b[32m\u001b[5B───────────────────────────────────────────────────\u001b[39m─────────────────────────────────────────────────\u001b[1;1H\u001b(B\u001b[m$ docker container run --env-file .env \\\u001b[K\r\n>   -d --net cache --restart unless-stopped --name builder --privileged \\                          \u001b[K\r\n>   --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\ \u001b[K\r\n>   -v dind:/var/lib/docker \\\u001b[K\r\n>   docker:dind --registry-mirror https://hub-cache:5000                                           \u001b[K\r\nd3d6db0239721fe4962737d78818848843a32840c1ff62f39abb7aaa525685f5                                   \u001b[K\r\n$ docker container exec -it builder sh\u001b[K\r\n/ # time docker image pull sudobmitch/demo:ubuntu\u001b[K\r\nubuntu: Pulling from sudobmitch/demo\u001b[K\r\nDigest: sha256:5747316366b8cc9e3021cd7286f42b2d6d81e3d743e2"]
[129.274978, "o", "ab571f55bcd5df788cc8                    \u001b[K\r\nStatus: Image is up to date for sudobmitch/demo:ubuntu                                             \u001b[K\r\ndocker.io/sudobmitch/demo:ubuntu\u001b[K\r\nreal    0m 0.33s\u001b[K\r\nuser    0m 0.01s\u001b[K\r\nsys     0m 0.01s\u001b[K\r\n/ #\u001b[K\u001b[18;1H9.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\(linux\\))\" http.response.contenttype=\"application/octet-stream\" http.response.duration=157.076482ms http.response.status=200 http.response.written=28556247                      \u001b[K\r\n192.168.70.3 - - [10/May/2020:21:58:01 +0000] \"GET /v2/sudobmitch/demo/blobs/sha256:d51af753c3d3a984351448ec0f85ddafc580680fd6dfce9f4b09fdb367ee1e3e HTTP/1.1\" 200 28556247 \"\" \"docker/19.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\\\(linux\\\\))\"\u001b[K\r\n$\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:docker* 1:vi-                                                \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[16;5H\u001b[?12l"]
[129.275261, "o", "\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[130.658605, "o", "docker image pull hub-c\u001b[1;16r\u001b[16;1H\n\u001b[15;28Hache:5000/ubuntu"]
[130.659028, "o", "\u001b[1;26r\u001b[16;1H"]
[130.705474, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[AUsing default tag: latest\u001b[1;26r\u001b[16;1H"]
[130.850027, "o", "\u001b[1;16r\u001b[2S\u001b[14dError response from daemon: manifest for hub-cache:5000/ubuntu:latest not found: manifest unknown: manifest unknown\u001b[1;26r\u001b[16;1H"]
[130.853415, "o", "/ # "]
[138.022628, "o", "\u001b[?25l\u001b[H  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image wo"]
[138.022772, "o", "rks, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\nexit\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n## 6 - Configure Compose\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[31m\u001b[1m#\u001b[35m remove non-compose instances\u001b(B\u001b[m\u001b[K\r\n                                                                                  153,1         70%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:docker- 1:vi*                                                \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[12;1H\u001b[?12l\u001b[?25h\u001b[?1006h\u001b[?1000h"]
[139.089565, "o", "\u001b[25;85H4\u001b[13;1H"]
[139.25702, "o", "\u001b[25;85H5\u001b[14;1H"]
[140.156084, "o", "\u001b[?25l\u001b[H  docker:dind --registry-mirror https://hub-cache:5000                                         \u001b[30m\u001b[43m[0/0]\u001b[2;1H\u001b[39m\u001b[49m# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b"]
[140.156467, "o", "[K\r\n# private image works, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\nexit\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n## 6 - Configure Compose\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[31m\u001b[1m#\u001b[35m remove non-compose instances\u001b(B\u001b[m\u001b[K\r\n                                                                                  155,1         70%\u001b[K\u001b[14;1H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[140.157826, "o", "\u001b[?25l\u001b[26d\u001b[30m\u001b[42m[preso] 0:docker- 1:[tmux]*                                            \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[14;1H\u001b[?12l\u001b[?25h"]
[140.57732, "o", "\u001b[30m\u001b[43md\r\u001b(B\u001b[m"]
[141.17452, "o", "\u001b[30m\u001b[43mdocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                             \u001b[15;1H#\r\u001b(B\u001b[m"]
[141.497657, "o", "\u001b[A\u001b[30m\u001b[43md\u001b[39m\u001b[49mocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                             \u001b[15;1H#\u001b[14;1H\u001b[30m\u001b[43mdocker image pull hub-cache:5000/sudobmitch/demo:ubuntu \b\u001b(B\u001b[m"]
[143.189704, "o", "\u001b]52;;ZG9ja2VyIGltYWdlIHB1bGwgaHViLWNhY2hlOjUwMDAvc3Vkb2JtaXRjaC9kZW1vOnVidW50dQo=\u0007\r\u001b[?1006h\u001b[?1000h"]
[143.190502, "o", "\u001b[?25l\u001b[H  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image wo"]
[143.190537, "o", "rks, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\nexit\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n## 6 - Configure Compose\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[31m\u001b[1m#\u001b[35m remove non-compose instances\u001b(B\u001b[m\u001b[K\r\n                                                                                  155,1         70%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:docker- 1:vi*                                                \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[14;1H\u001b[?12l\u001b[?25h"]
[143.834923, "o", "\u001b[?25l\u001b[32m\u001b[3B───────────────────────────────────────────────────\u001b[39m─────────────────────────────────────────────────\u001b[1;1H\u001b(B\u001b[m>   docker:dind --registry-mirror https://hub-cache:5000                                           \u001b[K\r\nd3d6db0239721fe4962737d78818848843a32840c1ff62f39abb7aaa525685f5                                   \u001b[K\r\n$ docker container exec -it builder sh\u001b[K\r\n/ # time docker image pull sudobmitch/demo:ubuntu\u001b[K\r\nubuntu: Pulling from sudobmitch/demo\u001b[K\r\nDigest: sha256:5747316366b8cc9e3021cd7286f42b2d6d81e3d743e2ab571f55bcd5df788cc8                    \u001b[K\r\nStatus: Image is up to date for sudobmitch/demo:ubuntu                                             \u001b[K\r\ndocker.io/sudobmitch/demo:ubuntu\u001b[K\r\nreal    0m 0.33s\u001b[K\r\nuser    0m 0.01s\u001b[K\r\nsys     0m 0.01s\u001b[K\r\n/ # docker image pull hub-cache:5000/u"]
[143.835256, "o", "buntu\u001b[K\r\nUsing default tag: latest\u001b[K\r\nError response from daemon: manifest for hub-cache:5000/ubuntu:latest not found: manifest unknown: manifest unknown\u001b[K\r\n/ #\u001b[K\u001b[18;1H9.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\(linux\\))\" http.response.contenttype=\"application/octet-stream\" http.response.duration=157.076482ms http.response.status=200 http.response.written=28556247                      \u001b[K\r\n192.168.70.3 - - [10/May/2020:21:58:01 +0000] \"GET /v2/sudobmitch/demo/blobs/sha256:d51af753c3d3a984351448ec0f85ddafc580680fd6dfce9f4b09fdb367ee1e3e HTTP/1.1\" 200 28556247 \"\" \"docker/19.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\\\(linux\\\\))\"\u001b[K\r\n$\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:docker* 1:vi-                                                \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[16;5H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[144.818457, "o", "docker image pull hub-cache:5000/sudobmitch/demo:ubuntu"]
[144.818864, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[1;26r\u001b[16;1H"]
[145.033212, "o", "\u001b[1;16r\u001b[2S\u001b[14dubuntu: Pulling from sudobmitch/demo\r\nDigest: sha256:5747316366b8cc9e3021cd7286f42b2d6d81e3d743e2ab571f55bcd5df788cc8\u001b[1;26r\u001b[16;1H"]
[145.037022, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[AStatus: Downloaded newer image for hub-cache:5000/sudobmitch/demo:ubuntu\u001b[1;26r\u001b[16;1H"]
[145.037459, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[Ahub-cache:5000/sudobmitch/demo:ubuntu\u001b[1;26r\u001b[16;1H"]
[145.041012, "o", "/ # "]
[149.914465, "o", "\u001b[?25l\u001b[H  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image wo"]
[149.914803, "o", "rks, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\nexit\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n## 6 - Configure Compose\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[31m\u001b[1m#\u001b[35m remove non-compose instances\u001b(B\u001b[m\u001b[K\r\n                                                                                  155,1         70%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:docker- 1:vi*                                                \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[14;1H\u001b[?12l\u001b[?25h\u001b[?1006h\u001b[?1000h"]
[150.751146, "o", "\u001b[25;85H6\u001b[15;1H"]
[150.910291, "o", "\u001b[25;85H7\u001b[16;1H"]
[151.850675, "o", "\u001b[?25l\u001b[H  docker:dind --registry-mirror https://hub-cache:5000                                         \u001b[30m\u001b[43m[0/0]\u001b[2;1H\u001b[39m\u001b[49m# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b"]
[151.850907, "o", "[K\r\n# private image works, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\nexit\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n## 6 - Configure Compose\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[31m\u001b[1m#\u001b[35m remove non-compose instances\u001b(B\u001b[m\u001b[K\r\n                                                                                  157,1         70%\u001b[K\u001b[16;1H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[151.852159, "o", "\u001b[?25l\u001b[26d\u001b[30m\u001b[42m[preso] 0:docker- 1:[tmux]*                                            \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[16;1H\u001b[?12l\u001b[?25h"]
[152.161501, "o", "\u001b[30m\u001b[43md\r\u001b(B\u001b[m"]
[152.465325, "o", "\u001b[30m\u001b[43mdocker image pull hub-cache:5000/library/ubuntu                                                     \u001b[17;1H#\r\u001b(B\u001b[m"]
[152.609507, "o", "\u001b[A\u001b[30m\u001b[43md\u001b[39m\u001b[49mocker image pull hub-cache:5000/library/ubuntu                                                     \u001b[17;1H#\u001b[16;1H\u001b[30m\u001b[43mdocker image pull hub-cache:5000/library/ubuntu \b\u001b(B\u001b[m"]
[155.23278, "o", "\u001b]52;;ZG9ja2VyIGltYWdlIHB1bGwgaHViLWNhY2hlOjUwMDAvbGlicmFyeS91YnVudHUK\u0007\r\u001b[?1006h\u001b[?1000h"]
[155.234941, "o", "\u001b[?25l\u001b[H  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image wo"]
[155.235222, "o", "rks, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\nexit\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n## 6 - Configure Compose\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[31m\u001b[1m#\u001b[35m remove non-compose instances\u001b(B\u001b[m\u001b[K\r\n                                                                                  157,1         70%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:docker- 1:vi*                                                \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[16;1H\u001b[?12l\u001b[?25h"]
[155.982195, "o", "\u001b[?25l\u001b[32m\r\n───────────────────────────────────────────────────\u001b[39m─────────────────────────────────────────────────\u001b[1;1H\u001b(B\u001b[mDigest: sha256:5747316366b8cc9e3021cd7286f42b2d6d81e3d743e2ab571f55bcd5df788cc8                    \u001b[K\r\nStatus: Image is up to date for sudobmitch/demo:ubuntu                                             \u001b[K\r\ndocker.io/sudobmitch/demo:ubuntu\u001b[K\r\nreal    0m 0.33s\u001b[K\r\nuser    0m 0.01s\u001b[K\r\nsys     0m 0.01s\u001b[K\r\n/ # docker image pull hub-cache:5000/ubuntu\u001b[K\r\nUsing default tag: latest\u001b[K\r\nError response from daemon: manifest for hub-cache:5000/ubuntu:latest not found: manifest unknown: manifest unknown\u001b[K\r\n/ # docker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                        \u001b[K\r\nubuntu: Pulling from sudobmitch/demo\u001b[K\r\nDigest: sha256:5747316366b8cc9e3021cd7286f4"]
[155.982341, "o", "2b2d6d81e3d743e2ab571f55bcd5df788cc8                    \u001b[K\r\nStatus: Downloaded newer image for hub-cache:5000/sudobmitch/demo:ubuntu                           \u001b[K\r\nhub-cache:5000/sudobmitch/demo:ubuntu\u001b[K\r\n/ #\u001b[K\u001b[18;1H9.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\(linux\\))\" http.response.contenttype=\"application/octet-stream\" http.response.duration=157.076482ms http.response.status=200 http.response.written=28556247                      \u001b[K\r\n192.168.70.3 - - [10/May/2020:21:58:01 +0000] \"GET /v2/sudobmitch/demo/blobs/sha256:d51af753c3d3a984351448ec0f85ddafc580680fd6dfce9f4b09fdb367ee1e3e HTTP/1.1\" 200 28556247 \"\" \"docker/19.03.8 go/go1.12.17 git-commit/afacb8b7f0 kernel/4.19.0-8-amd64 os/linux arch/amd64 UpstreamClient(Docker-Client/19.03.8 \\\\(linux\\\\))\"\u001b[K\r\n$\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:docker* 1:vi-                                                \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[16;5H\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1006l"]
[156.978423, "o", "docker image pull hub-cache\u001b[1;16r\u001b[16;1H\n\u001b[15;32H:5000/library/ubuntu"]
[156.978702, "o", "\u001b[1;26r\u001b[16;1H"]
[157.011347, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[AUsing default tag: latest\u001b[1;26r\u001b[16;1H"]
[157.164713, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[Alatest: Pulling from library/ubuntu\u001b[1;26r\u001b[16;1H"]
[157.207601, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[ADigest: sha256:747d2dbbaaee995098c9792d99bd333c6783ce56150d1b11e333bbceed5c54d7\u001b[1;26r\u001b[16;1H"]
[157.211954, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[AStatus: Downloaded newer image for hub-cache:5000/library/ubuntu:latest\u001b[1;26r\u001b[16;1H"]
[157.212075, "o", "\u001b[1;16r\u001b[16;1H\n\u001b[Ahub-cache:5000/library/ubuntu:latest\u001b[1;26r\u001b[16;1H"]
[157.213354, "o", "/ # "]
[159.066289, "o", "\u001b[?25l\u001b[H/ # docker image pull hub-cache:5000/ubuntu                                                  \u001b[30m\u001b[43m[0/254]\u001b[2;1H\u001b[39m\u001b[49mUsing default tag: latest\u001b[K\r\nError response from daemon: manifest for hub-cache:5000/ubuntu:latest not found: manifest unknown: m\u001b[4;1Hanifest unknown\u001b[K\r\n/ # docker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                        \u001b[K\r\nubuntu: Pulling from sudobmitch/demo\u001b[K\r\nDigest: sha256:5747316366b8cc9e3021cd7286f42b2d6d81e3d743e2ab571f55bcd5df788cc8                    \u001b[K\r\nStatus: Downloaded newer image for hub-cache:5000/sudobmitch/demo:ubuntu                           \u001b[K\r\nhub-cache:5000/sudobmitch/demo:ubuntu\u001b[K\r\n/ # docker image pull hub-cache:5000/library/ubuntu                                                \u001b[K\r\nUsing default tag: latest\u001b[K\r\nlatest: Pulling from library/ubuntu\u001b[K\r\nDigest: sha256:747d2dbbaaee995098c9792d99bd333c6783ce56150d1b11e333bbceed5c54d7                    \u001b[K\r\nStatus: Downloaded newer image for hub-cache:5000/library/ub"]
[159.066679, "o", "untu:latest                            \u001b[K\r\nhub-cache:5000/library/ubuntu:latest\u001b[K\r\n/ #\u001b[K\u001b[C\u001b[?12l\u001b[?25h"]
[159.06802, "o", "\u001b[?25l\u001b[26;1H\u001b[30m\u001b[42m[preso] 0:[tmux]* 1:vi-                                                \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[16;5H\u001b[?12l\u001b[?25h"]
[159.529087, "o", "\u001b[15;37H"]
[160.031302, "o", "\u001b[14;72H"]
[160.062046, "o", "\u001b[13;80H"]
[160.091083, "o", "\u001b[12;36H"]
[160.121259, "o", "\u001b[11;26H"]
[160.344911, "o", "\u001b[10;52H"]
[160.600879, "o", "\u001b[9;38H"]
[161.017234, "o", "\u001b[10;52H"]
[161.224867, "o", "\b"]
[161.400919, "o", "\b"]
[161.585072, "o", "\b"]
[161.761236, "o", "\b"]
[161.945177, "o", "\b"]
[162.121128, "o", "\b"]
[162.289134, "o", "\b"]
[162.766706, "o", "\u001b[30m\u001b[43m/\b\u001b(B\u001b[m"]
[162.902289, "o", "\b\u001b[30m\u001b[43my/\b\b\u001b(B\u001b[m"]
[163.405641, "o", "\b\u001b[30m\u001b[43mry/\u001b[3D\u001b(B\u001b[m"]
[163.435799, "o", "\b\u001b[30m\u001b[43mary/\u001b[4D\u001b(B\u001b[m"]
[163.466856, "o", "\b\u001b[30m\u001b[43mrary/\u001b[5D\u001b(B\u001b[m"]
[163.498908, "o", "\b\u001b[30m\u001b[43mbrary/\u001b[6D\u001b(B\u001b[m"]
[163.526196, "o", "\b\u001b[30m\u001b[43mibrary/\u001b[7D\u001b(B\u001b[m"]
[163.555104, "o", "\b\u001b[30m\u001b[43mlibrary/\u001b[8D\u001b(B\u001b[m"]
[163.588596, "o", "\b\u001b[30m\u001b[43m/library/\u001b[9D\u001b(B\u001b[m"]
[163.616881, "o", "\b\u001b[30m\u001b[43m0/library/\u001b[10D\u001b(B\u001b[m"]
[166.6984, "o", "\u001b[?25l\u001b[H/ # docker image pull hub-cache:5000/ubuntu\u001b[K\r\nUsing default tag: latest\u001b[K\r\nError response from daemon: manifest for hub-cache:5000/ubuntu:latest not found: manifest unknown: manifest unknown\u001b[K\r\n/ # docker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                        \u001b[K\r\nubuntu: Pulling from sudobmitch/demo\u001b[K\r\nDigest: sha256:5747316366b8cc9e3021cd7286f42b2d6d81e3d743e2ab571f55bcd5df788cc8                    \u001b[K\r\nStatus: Downloaded newer image for hub-cache:5000/sudobmitch/demo:ubuntu                           \u001b[K\r\nhub-cache:5000/sudobmitch/demo:ubuntu\u001b[K\r\n/ # docker image pull hub-cache:5000/library/ubuntu                                                \u001b[K\r\nUsing default tag: latest\u001b[K\r\nlatest: Pulling from library/ubuntu\u001b[K\r\nDigest: sha256:747d2dbbaaee995098c9792d99bd333c6783ce56150d1b11e333bbceed5c54d7                    \u001b[K\r\nStatus: Downloaded newer image for hub-cache:5000/library/ubuntu:latest                            \u001b[K\r\nhub-cache:5000/library/ubuntu:latest\u001b[K\r"]
[166.698723, "o", "\n/ #\u001b[K\u001b[C\u001b[?12l\u001b[?25h"]
[166.70003, "o", "\u001b[?25l\u001b[26;1H\u001b[30m\u001b[42m[preso] 0:docker* 1:vi-                                                \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[16;5H\u001b[?12l\u001b[?25h"]
[168.682199, "o", "\u001b[?25l\u001b[H  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# that didn't work, we can't use a colon in the volume mount short syntax                          \u001b[K\r\ndocker container run --env-file .env \\\u001b[K\r\n  -d --net cache --restart unless-stopped --name builder --privileged \\                            \u001b[K\r\n  --mount \"type=bind,src=$(pwd)/ca.pem,dst=/etc/docker/certs.d/hub-cache:5000/ca.crt,readonly\" \\   \u001b[K\r\n  -v dind:/var/lib/docker \\\u001b[K\r\n  docker:dind --registry-mirror https://hub-cache:5000                                             \u001b[K\r\n# now try to run a pull\u001b[K\r\ndocker container exec -it builder sh\u001b[K\r\ntime docker image pull sudobmitch/demo:ubuntu\u001b[K\r\n# that worked, so nothing broken, lets try that pull again                                         \u001b[K\r\ndocker image pull hub-cache:5000/ubuntu\u001b[K\r\n# that didn't work, hmm...\u001b[K\r\ndocker image pull hub-cache:5000/sudobmitch/demo:ubuntu                                            \u001b[K\r\n# private image wo"]
[168.682528, "o", "rks, why didn't the other image work?                                            \u001b[K\r\ndocker image pull hub-cache:5000/library/ubuntu\u001b[K\r\n# ah ha, library is the repository for official images                                             \u001b[K\r\nexit\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[K\r\n## 6 - Configure Compose\u001b[K\r\n\u001b[K\r\n\u001b[31m\u001b[1m```\u001b(B\u001b[m\u001b[K\r\n\u001b[31m\u001b[1m#\u001b[35m remove non-compose instances\u001b(B\u001b[m\u001b[K\r\n                                                                                  157,1         70%\u001b[K\r\n\u001b[30m\u001b[42m[preso] 0:docker- 1:vi*                                                \"bmitch-t490\" 18:01 10-May-20\u001b(B\u001b[m\u001b[16;1H\u001b[?12l\u001b[?25h\u001b[?1006h\u001b[?1000h"]
[171.054198, "o", "\u001b[?25l\u001b[26d\u001b[30m\u001b[42m[preso] 0:docker- 1:vi*                                                \"bmitch-t490\" 18:02 10-May-20\u001b(B\u001b[m\u001b[16;1H\u001b[?12l\u001b[?25h"]
